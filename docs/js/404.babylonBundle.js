"use strict";(self.webpackChunkbabylonjs_typescript_webpack_template=self.webpackChunkbabylonjs_typescript_webpack_template||[]).push([[404],{63404:(e,n,r)=>{r.r(n),r.d(n,{FresnelShaderScene:()=>v,default:()=>f});var t=r(8714),o=r(23579),s=r(90972),a=r(16765),i=r(30307),l=r(39268),c=r(84684),d=r(73212),h=r(63778),m=r(81552),p=r(63789),u=r(6070);r(51723);class v{constructor(){this.createScene=async(e,n)=>{const v=new t.x(e);Promise.all([r.e(568).then(r.bind(r,31568)),Promise.all([r.e(906),r.e(156),r.e(522),r.e(89),r.e(962),r.e(423),r.e(745),r.e(804),r.e(131),r.e(913),r.e(981),r.e(360),r.e(354),r.e(596),r.e(247)]).then(r.t.bind(r,53596,23))]).then((e=>{console.log(e),v.debugLayer.show({handleResize:!0,overlay:!0,globalRoot:document.getElementById("#root")||void 0})}));const f=new o.Y("my first camera",0,Math.PI/3,10,new s.P(0,0,0),v);f.setTarget(s.P.Zero()),f.attachControl(n,!0);const g=(0,a.Qk)("sphere",{diameter:2,segments:32},v);g.position.y=1,d.Q.ShadersStore.fresnelVertexShader='/**\r\n * Shader sample code based on "Fresnel" template at https://cyos.babylonjs.com\r\n */\r\n\r\nprecision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec3 normal;\r\n\r\n// Uniforms\r\nuniform mat4 world;\r\nuniform mat4 worldViewProjection;\r\n\r\n// Varying\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\nvoid main(void) {\r\n    vec4 outPosition = worldViewProjection * vec4(position, 1.0);\r\n    gl_Position = outPosition;\r\n    \r\n    vPositionW = vec3(world * vec4(position, 1.0));\r\n    vNormalW = normalize(vec3(world * vec4(normal, 0.0)));\r\n}\r\n    ',d.Q.ShadersStore.fresnelFragmentShader='/**\r\n * Shader sample code based on "Fresnel" template at https://cyos.babylonjs.com\r\n */\r\n\r\nprecision highp float;\r\n\r\n// Lights\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\n// Refs\r\nuniform vec3 cameraPosition;\r\n\r\nvoid main(void) {\r\n    vec3 color = vec3(1., 1., 1.);\r\n    vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n    // Fresnel\r\n\tfloat fresnelTerm = dot(viewDirectionW, vNormalW);\r\n\tfresnelTerm = clamp(1.0 - fresnelTerm, 0., 1.);\r\n\r\n    gl_FragColor = vec4(color * fresnelTerm, 1.);\r\n}';const w=new h.j("fresnel",v,{vertex:"fresnel",fragment:"fresnel"},{attributes:["position","normal"],defines:[],samplers:[],uniforms:["cameraPosition","world","worldViewProjection"]});g.material=w;const S=(0,i.$6)("ground",{width:6,height:6},v),b=new l.K("ground material",v);b.diffuseTexture=new c.x(m.Z,v),S.material=b,S.receiveShadows=!0;const P=new p.O("light",new s.P(0,-1,1),v);P.intensity=.5,P.position.y=10;const y=new u.u(512,P);return y.useBlurExponentialShadowMap=!0,y.blurScale=2,y.setDarkness(.2),y.getShadowMap().renderList.push(g),v}}}const f=new v},81552:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"9b31293ea96c8dfa518b45622da82a13.jpg"},51723:(e,n,r)=>{r.d(n,{w:()=>a});var t=r(6070),o=r(66089),s=r(84686);r(64863).p.AddParser(s.l.NAME_SHADOWGENERATOR,((e,n)=>{if(void 0!==e.shadowGenerators&&null!==e.shadowGenerators)for(let r=0,s=e.shadowGenerators.length;r<s;r++){const s=e.shadowGenerators[r];s.className===o.R.CLASSNAME?o.R.Parse(s,n):t.u.Parse(s,n)}}));class a{constructor(e){this.name=s.l.NAME_SHADOWGENERATOR,this.scene=e}register(){this.scene._gatherRenderTargetsStage.registerStep(s.l.STEP_GATHERRENDERTARGETS_SHADOWGENERATOR,this,this._gatherRenderTargets)}rebuild(){}serialize(e){e.shadowGenerators=[];const n=this.scene.lights;for(const r of n){const n=r.getShadowGenerators();if(n){const r=n.values();for(let n=r.next();!0!==n.done;n=r.next()){const r=n.value;e.shadowGenerators.push(r.serialize())}}}}addFromContainer(e){}removeFromContainer(e,n){}dispose(){}_gatherRenderTargets(e){const n=this.scene;if(this.scene.shadowsEnabled)for(let r=0;r<n.lights.length;r++){const t=n.lights[r],o=t.getShadowGenerators();if(t.isEnabled()&&t.shadowEnabled&&o){const r=o.values();for(let t=r.next();!0!==t.done;t=r.next()){const r=t.value.getShadowMap();-1!==n.textures.indexOf(r)&&e.push(r)}}}}}t.u._SceneComponentInitialization=e=>{let n=e._getComponent(s.l.NAME_SHADOWGENERATOR);n||(n=new a(e),e._addComponent(n))}},16765:(e,n,r)=>{r.d(n,{A1:()=>c,Qk:()=>l,jY:()=>i});var t=r(90972),o=r(33632),s=r(74517),a=r(53027);function i(e){const n=0|(e.segments||32),r=e.diameterX||e.diameter||1,o=e.diameterY||e.diameter||1,i=e.diameterZ||e.diameter||1,l=e.arc&&(e.arc<=0||e.arc>1)?1:e.arc||1,c=e.slice&&e.slice<=0?1:e.slice||1,d=0===e.sideOrientation?0:e.sideOrientation||s.x.DEFAULTSIDE,h=!!e.dedupTopBottomIndices,m=new t.P(r/2,o/2,i/2),p=2+n,u=2*p,v=[],f=[],g=[],w=[];for(let e=0;e<=p;e++){const n=e/p,r=n*Math.PI*c;for(let e=0;e<=u;e++){const o=e/u,s=o*Math.PI*2*l,i=t.y3.RotationZ(-r),c=t.y3.RotationY(s),d=t.P.TransformCoordinates(t.P.Up(),i),h=t.P.TransformCoordinates(d,c),p=h.multiply(m),v=h.divide(m).normalize();f.push(p.x,p.y,p.z),g.push(v.x,v.y,v.z),w.push(o,a.e.UseOpenGLOrientationForUV?1-n:n)}if(e>0){const n=f.length/3;for(let r=n-2*(u+1);r+u+2<n;r++)h?(e>1&&(v.push(r),v.push(r+1),v.push(r+u+1)),(e<p||c<1)&&(v.push(r+u+1),v.push(r+1),v.push(r+u+2))):(v.push(r),v.push(r+1),v.push(r+u+1),v.push(r+u+1),v.push(r+1),v.push(r+u+2))}}s.x._ComputeSides(d,f,v,g,w,e.frontUVs,e.backUVs);const S=new s.x;return S.indices=v,S.positions=f,S.normals=g,S.uvs=w,S}function l(e,n={},r=null){const t=new o.Kj(e,r);return n.sideOrientation=o.Kj._GetDefaultSideOrientation(n.sideOrientation),t._originalBuilderSideOrientation=n.sideOrientation,i(n).applyToMesh(t,n.updatable),t}const c={CreateSphere:l};s.x.CreateSphere=i,o.Kj.CreateSphere=(e,n,r,t,o,s)=>l(e,{segments:n,diameterX:r,diameterY:r,diameterZ:r,sideOrientation:s,updatable:o},t)}}]);
//# sourceMappingURL=404.babylonBundle.js.map