"use strict";(self.webpackChunkbabylonjs_typescript_webpack_template=self.webpackChunkbabylonjs_typescript_webpack_template||[]).push([[962],{22078:(t,s,e)=>{e.d(s,{E:()=>l,_:()=>c});var i=e(89859),o=e(37959),n=e(33632),r=e(56906),a=e(79061),h=e(63778);e(3135),e(46789),n.Kj._LinesMeshParser=(t,s)=>c.Parse(t,s);class c extends n.Kj{_isShaderMaterial(t){return"ShaderMaterial"===t.getClassName()}constructor(t,s=null,e=null,n=null,r,a,c,l){super(t,s,e,n,r),this.useVertexColor=a,this.useVertexAlpha=c,this.color=new i.Wo(1,1,1),this.alpha=1,n&&(this.color=n.color.clone(),this.alpha=n.alpha,this.useVertexColor=n.useVertexColor,this.useVertexAlpha=n.useVertexAlpha),this.intersectionThreshold=.1;const p={attributes:[o.o.PositionKind],uniforms:["world","viewProjection"],needAlphaBlending:!0,defines:[],useClipPlane:null};!1===c?p.needAlphaBlending=!1:p.defines.push("#define VERTEXALPHA"),a?(p.defines.push("#define VERTEXCOLOR"),p.attributes.push(o.o.ColorKind)):(p.uniforms.push("color"),this._color4=new i.HE),l?this.material=l:(this.material=new h.j("colorShader",this.getScene(),"color",p,!1),this.material.doNotSerialize=!0)}isReady(){return!!this._lineMaterial.isReady(this,!!this._userInstancedBuffersStorage)&&super.isReady()}getClassName(){return"LinesMesh"}get material(){return this._lineMaterial}set material(t){this._lineMaterial=t,this._lineMaterial.fillMode=a.F.LineListDrawMode}get checkCollisions(){return!1}set checkCollisions(t){}_bind(t,s){if(!this._geometry)return this;const e=this.isUnIndexed?null:this._geometry.getIndexBuffer();if(this._userInstancedBuffersStorage?this._geometry._bind(s,e,this._userInstancedBuffersStorage.vertexBuffers,this._userInstancedBuffersStorage.vertexArrayObjects):this._geometry._bind(s,e),!this.useVertexColor&&this._isShaderMaterial(this._lineMaterial)){const{r:t,g:s,b:e}=this.color;this._color4.set(t,s,e,this.alpha),this._lineMaterial.setColor4("color",this._color4)}return this}_draw(t,s,e){if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;const i=this.getScene().getEngine();return this._unIndexed?i.drawArraysType(a.F.LineListDrawMode,t.verticesStart,t.verticesCount,e):i.drawElementsType(a.F.LineListDrawMode,t.indexStart,t.indexCount,e),this}dispose(t,s=!1,e){e||this._lineMaterial.dispose(!1,!1,!0),super.dispose(t)}clone(t,s=null,e){return new c(t,this.getScene(),s,this,e)}createInstance(t){const s=new l(t,this);if(this.instancedBuffers){s.instancedBuffers={};for(const t in this.instancedBuffers)s.instancedBuffers[t]=this.instancedBuffers[t]}return s}serialize(t){super.serialize(t),t.color=this.color.asArray(),t.alpha=this.alpha}static Parse(t,s){const e=new c(t.name,s);return e.color=i.Wo.FromArray(t.color),e.alpha=t.alpha,e}}class l extends r.S{constructor(t,s){super(t,s),this.intersectionThreshold=s.intersectionThreshold}getClassName(){return"InstancedLinesMesh"}}},1419:(t,s,e)=>{e.d(s,{b:()=>y});var i=e(90972),o=e(59288),n=e(83262),r=e(17582),a=e(37959),h=e(74517),c=e(69590),l=e(71528),p=e(85388),m=e(31865),d=e(7786);class y{constructor(t=!0,s=Ammo,e=null){this._useDeltaForWorldStep=t,this.bjsAMMO={},this.name="AmmoJSPlugin",this._timeStep=1/60,this._fixedTimeStep=1/60,this._maxSteps=5,this._tmpQuaternion=new i._f,this._tmpContactCallbackResult=!1,this._tmpContactPoint=new i.P,this._tmpContactNormal=new i.P,this._tmpVec3=new i.P,this._tmpMatrix=new i.y3,"function"!=typeof s?(this.bjsAMMO=s,this.isSupported()?(this._collisionConfiguration=new this.bjsAMMO.btSoftBodyRigidBodyCollisionConfiguration,this._dispatcher=new this.bjsAMMO.btCollisionDispatcher(this._collisionConfiguration),this._overlappingPairCache=e||new this.bjsAMMO.btDbvtBroadphase,this._solver=new this.bjsAMMO.btSequentialImpulseConstraintSolver,this._softBodySolver=new this.bjsAMMO.btDefaultSoftBodySolver,this.world=new this.bjsAMMO.btSoftRigidDynamicsWorld(this._dispatcher,this._overlappingPairCache,this._solver,this._collisionConfiguration,this._softBodySolver),this._tmpAmmoConcreteContactResultCallback=new this.bjsAMMO.ConcreteContactResultCallback,this._tmpAmmoConcreteContactResultCallback.addSingleResult=t=>{const s=(t=this.bjsAMMO.wrapPointer(t,this.bjsAMMO.btManifoldPoint)).getPositionWorldOnA(),e=t.m_normalWorldOnB;this._tmpContactPoint.x=s.x(),this._tmpContactPoint.y=s.y(),this._tmpContactPoint.z=s.z(),this._tmpContactNormal.x=e.x(),this._tmpContactNormal.y=e.y(),this._tmpContactNormal.z=e.z(),this._tmpContactImpulse=t.getAppliedImpulse(),this._tmpContactDistance=t.getDistance(),this._tmpContactCallbackResult=!0},this._raycastResult=new p.d,this._tmpAmmoTransform=new this.bjsAMMO.btTransform,this._tmpAmmoTransform.setIdentity(),this._tmpAmmoQuaternion=new this.bjsAMMO.btQuaternion(0,0,0,1),this._tmpAmmoVectorA=new this.bjsAMMO.btVector3(0,0,0),this._tmpAmmoVectorB=new this.bjsAMMO.btVector3(0,0,0),this._tmpAmmoVectorC=new this.bjsAMMO.btVector3(0,0,0),this._tmpAmmoVectorD=new this.bjsAMMO.btVector3(0,0,0)):o.Y.Error("AmmoJS is not available. Please make sure you included the js file.")):o.Y.Error("AmmoJS is not ready. Please make sure you await Ammo() before using the plugin.")}getPluginVersion(){return 1}setGravity(t){this._tmpAmmoVectorA.setValue(t.x,t.y,t.z),this.world.setGravity(this._tmpAmmoVectorA),this.world.getWorldInfo().set_m_gravity(this._tmpAmmoVectorA)}setTimeStep(t){this._timeStep=t}setFixedTimeStep(t){this._fixedTimeStep=t}setMaxSteps(t){this._maxSteps=t}getTimeStep(){return this._timeStep}_isImpostorInContact(t){return this._tmpContactCallbackResult=!1,this.world.contactTest(t.physicsBody,this._tmpAmmoConcreteContactResultCallback),this._tmpContactCallbackResult}_isImpostorPairInContact(t,s){return this._tmpContactCallbackResult=!1,this.world.contactPairTest(t.physicsBody,s.physicsBody,this._tmpAmmoConcreteContactResultCallback),this._tmpContactCallbackResult}_stepSimulation(t=1/60,s=10,e=1/60){if(0==s)this.world.stepSimulation(t,0);else for(;s>0&&t>0;)t-e<e?(this.world.stepSimulation(t,0),t=0):(t-=e,this.world.stepSimulation(e,0)),s--}executeStep(t,s){for(const t of s)t.soft||t.beforeStep();this._stepSimulation(this._useDeltaForWorldStep?t:this._timeStep,this._maxSteps,this._fixedTimeStep);for(const t of s)if(t.soft?this._afterSoftStep(t):t.afterStep(),t._onPhysicsCollideCallbacks.length>0&&this._isImpostorInContact(t))for(const s of t._onPhysicsCollideCallbacks)for(const e of s.otherImpostors)(t.physicsBody.isActive()||e.physicsBody.isActive())&&this._isImpostorPairInContact(t,e)&&(t.onCollide({body:e.physicsBody,point:this._tmpContactPoint,distance:this._tmpContactDistance,impulse:this._tmpContactImpulse,normal:this._tmpContactNormal}),e.onCollide({body:t.physicsBody,point:this._tmpContactPoint,distance:this._tmpContactDistance,impulse:this._tmpContactImpulse,normal:this._tmpContactNormal}))}_afterSoftStep(t){t.type===n.Q.RopeImpostor?this._ropeStep(t):this._softbodyOrClothStep(t)}_ropeStep(t){const s=t.physicsBody.get_m_nodes(),e=s.size();let o,n,r,a,h;const p=new Array;for(let t=0;t<e;t++)o=s.at(t),n=o.get_m_x(),r=n.x(),a=n.y(),h=n.z(),p.push(new i.P(r,a,h));const m=t.object,d=t.getParam("shape");t._isFromLine?t.object=(0,l.nL)("lines",{points:p,instance:m}):t.object=(0,c.Gc)("ext",{shape:d,path:p,instance:m})}_softbodyOrClothStep(t){const s=t.type===n.Q.ClothImpostor?1:-1,e=t.object;let i=e.getVerticesData(a.o.PositionKind);i||(i=[]);let o=e.getVerticesData(a.o.NormalKind);o||(o=[]);const r=i.length/3,c=t.physicsBody.get_m_nodes();let l,p,m,d,y,u,_,g;for(let t=0;t<r;t++){l=c.at(t),p=l.get_m_x(),m=p.x(),d=p.y(),y=p.z()*s;const e=l.get_m_n();u=e.x(),_=e.y(),g=e.z()*s,i[3*t]=m,i[3*t+1]=d,i[3*t+2]=y,o[3*t]=u,o[3*t+1]=_,o[3*t+2]=g}const f=new h.x;f.positions=i,f.normals=o,f.uvs=e.getVerticesData(a.o.UVKind),f.colors=e.getVerticesData(a.o.ColorKind),e&&e.getIndices&&(f.indices=e.getIndices()),f.applyToMesh(e)}applyImpulse(t,s,e){if(t.soft)o.Y.Warn("Cannot be applied to a soft body");else{t.physicsBody.activate();const i=this._tmpAmmoVectorA,o=this._tmpAmmoVectorB;t.object&&t.object.getWorldMatrix&&e.subtractInPlace(t.object.getWorldMatrix().getTranslation()),i.setValue(e.x,e.y,e.z),o.setValue(s.x,s.y,s.z),t.physicsBody.applyImpulse(o,i)}}applyForce(t,s,e){if(t.soft)o.Y.Warn("Cannot be applied to a soft body");else{t.physicsBody.activate();const i=this._tmpAmmoVectorA,o=this._tmpAmmoVectorB;if(t.object&&t.object.getWorldMatrix){const s=t.object.getWorldMatrix().getTranslation();i.setValue(e.x-s.x,e.y-s.y,e.z-s.z)}else i.setValue(e.x,e.y,e.z);o.setValue(s.x,s.y,s.z),t.physicsBody.applyForce(o,i)}}generatePhysicsBody(t){if(t._pluginData.toDispose=[],t.parent)t.physicsBody&&(this.removePhysicsBody(t),t.forceUpdate());else if(t.isBodyInitRequired()){const s=this._createShape(t),e=t.getParam("mass");if(t._pluginData.mass=e,t.soft)s.get_m_cfg().set_collisions(17),s.get_m_cfg().set_kDP(t.getParam("damping")),this.bjsAMMO.castObject(s,this.bjsAMMO.btCollisionObject).getCollisionShape().setMargin(t.getParam("margin")),s.setActivationState(y._DISABLE_DEACTIVATION_FLAG),this.world.addSoftBody(s,1,-1),t.physicsBody=s,t._pluginData.toDispose.push(s),this.setBodyPressure(t,0),t.type===n.Q.SoftbodyImpostor&&this.setBodyPressure(t,t.getParam("pressure")),this.setBodyStiffness(t,t.getParam("stiffness")),this.setBodyVelocityIterations(t,t.getParam("velocityIterations")),this.setBodyPositionIterations(t,t.getParam("positionIterations"));else{const i=new this.bjsAMMO.btVector3(0,0,0),o=new this.bjsAMMO.btTransform;t.object.computeWorldMatrix(!0),o.setIdentity(),0!==e&&s.calculateLocalInertia(e,i),this._tmpAmmoVectorA.setValue(t.object.position.x,t.object.position.y,t.object.position.z),this._tmpAmmoQuaternion.setValue(t.object.rotationQuaternion.x,t.object.rotationQuaternion.y,t.object.rotationQuaternion.z,t.object.rotationQuaternion.w),o.setOrigin(this._tmpAmmoVectorA),o.setRotation(this._tmpAmmoQuaternion);const r=new this.bjsAMMO.btDefaultMotionState(o),a=new this.bjsAMMO.btRigidBodyConstructionInfo(e,r,s,i),h=new this.bjsAMMO.btRigidBody(a);if(0===e&&(h.setCollisionFlags(h.getCollisionFlags()|y._KINEMATIC_FLAG),h.setActivationState(y._DISABLE_DEACTIVATION_FLAG)),t.type!=n.Q.NoImpostor||s.getChildShape||h.setCollisionFlags(h.getCollisionFlags()|y._DISABLE_COLLISION_FLAG),t.type!==n.Q.MeshImpostor&&t.type!==n.Q.NoImpostor){const s=t.object.getBoundingInfo();this._tmpVec3.copyFrom(t.object.getAbsolutePosition()),this._tmpVec3.subtractInPlace(s.boundingBox.centerWorld),this._tmpVec3.x/=t.object.scaling.x,this._tmpVec3.y/=t.object.scaling.y,this._tmpVec3.z/=t.object.scaling.z,t.setDeltaPosition(this._tmpVec3)}const c=t.getParam("group"),l=t.getParam("mask");c&&l?this.world.addRigidBody(h,c,l):this.world.addRigidBody(h),t.physicsBody=h,t._pluginData.toDispose=t._pluginData.toDispose.concat([h,a,r,o,i,s])}this.setBodyRestitution(t,t.getParam("restitution")),this.setBodyFriction(t,t.getParam("friction"))}}removePhysicsBody(t){this.world&&(t.soft?this.world.removeSoftBody(t.physicsBody):this.world.removeRigidBody(t.physicsBody),t._pluginData&&(t._pluginData.toDispose.forEach((t=>{this.bjsAMMO.destroy(t)})),t._pluginData.toDispose=[]))}generateJoint(t){const s=t.mainImpostor.physicsBody,e=t.connectedImpostor.physicsBody;if(!s||!e)return;const n=t.joint.jointData;let a;switch(n.mainPivot||(n.mainPivot=new i.P(0,0,0)),n.connectedPivot||(n.connectedPivot=new i.P(0,0,0)),t.joint.type){case r.q7.DistanceJoint:{const t=n.maxDistance;t&&(n.mainPivot=new i.P(0,-t/2,0),n.connectedPivot=new i.P(0,t/2,0)),a=new this.bjsAMMO.btPoint2PointConstraint(s,e,new this.bjsAMMO.btVector3(n.mainPivot.x,n.mainPivot.y,n.mainPivot.z),new this.bjsAMMO.btVector3(n.connectedPivot.x,n.connectedPivot.y,n.connectedPivot.z));break}case r.q7.HingeJoint:{n.mainAxis||(n.mainAxis=new i.P(0,0,0)),n.connectedAxis||(n.connectedAxis=new i.P(0,0,0));const t=new this.bjsAMMO.btVector3(n.mainAxis.x,n.mainAxis.y,n.mainAxis.z),o=new this.bjsAMMO.btVector3(n.connectedAxis.x,n.connectedAxis.y,n.connectedAxis.z);a=new this.bjsAMMO.btHingeConstraint(s,e,new this.bjsAMMO.btVector3(n.mainPivot.x,n.mainPivot.y,n.mainPivot.z),new this.bjsAMMO.btVector3(n.connectedPivot.x,n.connectedPivot.y,n.connectedPivot.z),t,o);break}case r.q7.BallAndSocketJoint:a=new this.bjsAMMO.btPoint2PointConstraint(s,e,new this.bjsAMMO.btVector3(n.mainPivot.x,n.mainPivot.y,n.mainPivot.z),new this.bjsAMMO.btVector3(n.connectedPivot.x,n.connectedPivot.y,n.connectedPivot.z));break;default:o.Y.Warn("JointType not currently supported by the Ammo plugin, falling back to PhysicsJoint.BallAndSocketJoint"),a=new this.bjsAMMO.btPoint2PointConstraint(s,e,new this.bjsAMMO.btVector3(n.mainPivot.x,n.mainPivot.y,n.mainPivot.z),new this.bjsAMMO.btVector3(n.connectedPivot.x,n.connectedPivot.y,n.connectedPivot.z))}this.world.addConstraint(a,!t.joint.jointData.collision),t.joint.physicsJoint=a}removeJoint(t){this.world&&this.world.removeConstraint(t.joint.physicsJoint)}_addMeshVerts(t,s,e){let o=0;if(e&&e.getIndices&&e.getWorldMatrix&&e.getChildMeshes){let n=e.getIndices();n||(n=[]);let r,h=e.getVerticesData(a.o.PositionKind);if(h||(h=[]),s&&s!==e){let t;t=s.rotationQuaternion?s.rotationQuaternion:s.rotation?i._f.FromEulerAngles(s.rotation.x,s.rotation.y,s.rotation.z):i._f.Identity(),i.y3.Compose(i.P.One(),t,s.position).invertToRef(this._tmpMatrix),r=e.computeWorldMatrix(!1).multiply(this._tmpMatrix)}else i.y3.ScalingToRef(e.scaling.x,e.scaling.y,e.scaling.z,this._tmpMatrix),r=this._tmpMatrix;const c=n.length/3;for(let s=0;s<c;s++){const e=[];for(let t=0;t<3;t++){let o,a=new i.P(h[3*n[3*s+t]+0],h[3*n[3*s+t]+1],h[3*n[3*s+t]+2]);a=i.P.TransformCoordinates(a,r),o=0==t?this._tmpAmmoVectorA:1==t?this._tmpAmmoVectorB:this._tmpAmmoVectorC,o.setValue(a.x,a.y,a.z),e.push(o)}t.addTriangle(e[0],e[1],e[2]),o++}e.getChildMeshes().forEach((e=>{o+=this._addMeshVerts(t,s,e)}))}return o}_softVertexData(t){const s=t.object;if(s&&s.getIndices&&s.getWorldMatrix&&s.getChildMeshes){let t=s.getIndices();t||(t=[]);let e=s.getVerticesData(a.o.PositionKind);e||(e=[]);let o=s.getVerticesData(a.o.NormalKind);o||(o=[]),s.computeWorldMatrix(!1);const n=[],r=[];for(let t=0;t<e.length;t+=3){let a=new i.P(e[t],e[t+1],e[t+2]),h=new i.P(o[t],o[t+1],o[t+2]);a=i.P.TransformCoordinates(a,s.getWorldMatrix()),h=i.P.TransformNormal(h,s.getWorldMatrix()),n.push(a.x,a.y,a.z),r.push(h.x,h.y,h.z)}const c=new h.x;return c.positions=n,c.normals=r,c.uvs=s.getVerticesData(a.o.UVKind),c.colors=s.getVerticesData(a.o.ColorKind),s&&s.getIndices&&(c.indices=s.getIndices()),c.applyToMesh(s),s.position=i.P.Zero(),s.rotationQuaternion=null,s.rotation=i.P.Zero(),s.computeWorldMatrix(!0),c}return h.x.ExtractFromMesh(s)}_createSoftbody(t){const s=t.object;if(s&&s.getIndices){let e=s.getIndices();e||(e=[]);const o=this._softVertexData(t),n=o.positions,r=o.normals;if(null===n||null===r)return new this.bjsAMMO.btCompoundShape;{const t=[],o=[];for(let s=0;s<n.length;s+=3){const e=new i.P(n[s],n[s+1],n[s+2]),a=new i.P(r[s],r[s+1],r[s+2]);t.push(e.x,e.y,-e.z),o.push(a.x,a.y,-a.z)}const a=(new this.bjsAMMO.btSoftBodyHelpers).CreateFromTriMesh(this.world.getWorldInfo(),t,s.getIndices(),e.length/3,!0),h=n.length/3,c=a.get_m_nodes();let l,p;for(let t=0;t<h;t++)l=c.at(t),p=l.get_m_n(),p.setX(o[3*t]),p.setY(o[3*t+1]),p.setZ(o[3*t+2]);return a}}}_createCloth(t){const s=t.object;if(s&&s.getIndices){let e=s.getIndices();e||(e=[]);const i=this._softVertexData(t),o=i.positions,n=i.normals;if(null===o||null===n)return new this.bjsAMMO.btCompoundShape;{const s=o.length,e=Math.sqrt(s/3);t.segments=e;const i=e-1;return this._tmpAmmoVectorA.setValue(o[0],o[1],o[2]),this._tmpAmmoVectorB.setValue(o[3*i],o[3*i+1],o[3*i+2]),this._tmpAmmoVectorD.setValue(o[s-3],o[s-2],o[s-1]),this._tmpAmmoVectorC.setValue(o[s-3-3*i],o[s-2-3*i],o[s-1-3*i]),(new this.bjsAMMO.btSoftBodyHelpers).CreatePatch(this.world.getWorldInfo(),this._tmpAmmoVectorA,this._tmpAmmoVectorB,this._tmpAmmoVectorC,this._tmpAmmoVectorD,e,e,t.getParam("fixedPoints"),!0)}}}_createRope(t){let s,e;const i=this._softVertexData(t),n=i.positions,r=i.normals;if(null===n||null===r)return new this.bjsAMMO.btCompoundShape;if(i.applyToMesh(t.object,!0),t._isFromLine=!0,0===r.map((t=>t*t)).reduce(((t,s)=>t+s)))s=n.length,e=s/3-1,this._tmpAmmoVectorA.setValue(n[0],n[1],n[2]),this._tmpAmmoVectorB.setValue(n[s-3],n[s-2],n[s-1]);else{t._isFromLine=!1;const i=t.getParam("path");if(null===t.getParam("shape"))return o.Y.Warn("No shape available for extruded mesh"),new this.bjsAMMO.btCompoundShape;s=i.length,e=s-1,this._tmpAmmoVectorA.setValue(i[0].x,i[0].y,i[0].z),this._tmpAmmoVectorB.setValue(i[s-1].x,i[s-1].y,i[s-1].z)}t.segments=e;let a=t.getParam("fixedPoints");a=a>3?3:a;const h=(new this.bjsAMMO.btSoftBodyHelpers).CreateRope(this.world.getWorldInfo(),this._tmpAmmoVectorA,this._tmpAmmoVectorB,e-1,a);return h.get_m_cfg().set_collisions(17),h}_createCustom(t){let s=null;return this.onCreateCustomShape&&(s=this.onCreateCustomShape(t)),null==s&&(s=new this.bjsAMMO.btCompoundShape),s}_addHullVerts(t,s,e){let o=0;if(e&&e.getIndices&&e.getWorldMatrix&&e.getChildMeshes){let n=e.getIndices();n||(n=[]);let r=e.getVerticesData(a.o.PositionKind);r||(r=[]),e.computeWorldMatrix(!1);const h=n.length/3;for(let s=0;s<h;s++){const a=[];for(let t=0;t<3;t++){let o,h=new i.P(r[3*n[3*s+t]+0],r[3*n[3*s+t]+1],r[3*n[3*s+t]+2]);i.y3.ScalingToRef(e.scaling.x,e.scaling.y,e.scaling.z,this._tmpMatrix),h=i.P.TransformCoordinates(h,this._tmpMatrix),o=0==t?this._tmpAmmoVectorA:1==t?this._tmpAmmoVectorB:this._tmpAmmoVectorC,o.setValue(h.x,h.y,h.z),a.push(o)}t.addPoint(a[0],!0),t.addPoint(a[1],!0),t.addPoint(a[2],!0),o++}e.getChildMeshes().forEach((e=>{o+=this._addHullVerts(t,s,e)}))}return o}_createShape(t,s=!1){const e=t.object;let r;const a=t.getObjectExtents();if(!s){const s=t.object.getChildMeshes?t.object.getChildMeshes(!0):[];r=new this.bjsAMMO.btCompoundShape;let e=0;if(s.forEach((t=>{const s=t.getPhysicsImpostor();if(s){if(s.type==n.Q.MeshImpostor)throw"A child MeshImpostor is not supported. Only primitive impostors are supported as children (eg. box or sphere)";const o=this._createShape(s),a=t.parent.getWorldMatrix().clone(),h=new i.P;a.decompose(h),this._tmpAmmoTransform.getOrigin().setValue(t.position.x*h.x,t.position.y*h.y,t.position.z*h.z),this._tmpAmmoQuaternion.setValue(t.rotationQuaternion.x,t.rotationQuaternion.y,t.rotationQuaternion.z,t.rotationQuaternion.w),this._tmpAmmoTransform.setRotation(this._tmpAmmoQuaternion),r.addChildShape(this._tmpAmmoTransform,o),s.dispose(),e++}})),e>0){if(t.type!=n.Q.NoImpostor){const s=this._createShape(t,!0);s&&(this._tmpAmmoTransform.getOrigin().setValue(0,0,0),this._tmpAmmoQuaternion.setValue(0,0,0,1),this._tmpAmmoTransform.setRotation(this._tmpAmmoQuaternion),r.addChildShape(this._tmpAmmoTransform,s))}return r}this.bjsAMMO.destroy(r),r=null}switch(t.type){case n.Q.SphereImpostor:if(m.R.WithinEpsilon(a.x,a.y,1e-4)&&m.R.WithinEpsilon(a.x,a.z,1e-4))r=new this.bjsAMMO.btSphereShape(a.x/2);else{const t=[new this.bjsAMMO.btVector3(0,0,0)],s=[1];r=new this.bjsAMMO.btMultiSphereShape(t,s,1),r.setLocalScaling(new this.bjsAMMO.btVector3(a.x/2,a.y/2,a.z/2))}break;case n.Q.CapsuleImpostor:{const t=a.x/2;r=new this.bjsAMMO.btCapsuleShape(t,a.y-2*t)}break;case n.Q.CylinderImpostor:this._tmpAmmoVectorA.setValue(a.x/2,a.y/2,a.z/2),r=new this.bjsAMMO.btCylinderShape(this._tmpAmmoVectorA);break;case n.Q.PlaneImpostor:case n.Q.BoxImpostor:this._tmpAmmoVectorA.setValue(a.x/2,a.y/2,a.z/2),r=new this.bjsAMMO.btBoxShape(this._tmpAmmoVectorA);break;case n.Q.MeshImpostor:if(0==t.getParam("mass")){if(this.onCreateCustomMeshImpostor)r=this.onCreateCustomMeshImpostor(t);else{const s=new this.bjsAMMO.btTriangleMesh;t._pluginData.toDispose.push(s);const i=this._addMeshVerts(s,e,e);r=0==i?new this.bjsAMMO.btCompoundShape:new this.bjsAMMO.btBvhTriangleMeshShape(s)}break}case n.Q.ConvexHullImpostor:if(this.onCreateCustomConvexHullImpostor)r=this.onCreateCustomConvexHullImpostor(t);else{const s=new this.bjsAMMO.btConvexHullShape;0==this._addHullVerts(s,e,e)?(t._pluginData.toDispose.push(s),r=new this.bjsAMMO.btCompoundShape):r=s}break;case n.Q.NoImpostor:r=new this.bjsAMMO.btSphereShape(a.x/2);break;case n.Q.CustomImpostor:r=this._createCustom(t);break;case n.Q.SoftbodyImpostor:r=this._createSoftbody(t);break;case n.Q.ClothImpostor:r=this._createCloth(t);break;case n.Q.RopeImpostor:r=this._createRope(t);break;default:o.Y.Warn("The impostor type is not currently supported by the ammo plugin.")}return r}setTransformationFromPhysicsBody(t){t.physicsBody.getMotionState().getWorldTransform(this._tmpAmmoTransform),t.object.position.set(this._tmpAmmoTransform.getOrigin().x(),this._tmpAmmoTransform.getOrigin().y(),this._tmpAmmoTransform.getOrigin().z()),t.object.rotationQuaternion?t.object.rotationQuaternion.set(this._tmpAmmoTransform.getRotation().x(),this._tmpAmmoTransform.getRotation().y(),this._tmpAmmoTransform.getRotation().z(),this._tmpAmmoTransform.getRotation().w()):t.object.rotation&&(this._tmpQuaternion.set(this._tmpAmmoTransform.getRotation().x(),this._tmpAmmoTransform.getRotation().y(),this._tmpAmmoTransform.getRotation().z(),this._tmpAmmoTransform.getRotation().w()),this._tmpQuaternion.toEulerAnglesToRef(t.object.rotation))}setPhysicsBodyTransformation(t,s,e){const i=t.physicsBody.getWorldTransform();if(Math.abs(i.getOrigin().x()-s.x)>d.kn||Math.abs(i.getOrigin().y()-s.y)>d.kn||Math.abs(i.getOrigin().z()-s.z)>d.kn||Math.abs(i.getRotation().x()-e.x)>d.kn||Math.abs(i.getRotation().y()-e.y)>d.kn||Math.abs(i.getRotation().z()-e.z)>d.kn||Math.abs(i.getRotation().w()-e.w)>d.kn)if(this._tmpAmmoVectorA.setValue(s.x,s.y,s.z),i.setOrigin(this._tmpAmmoVectorA),this._tmpAmmoQuaternion.setValue(e.x,e.y,e.z,e.w),i.setRotation(this._tmpAmmoQuaternion),t.physicsBody.setWorldTransform(i),0==t.mass){const s=t.physicsBody.getMotionState();s&&s.setWorldTransform(i)}else t.physicsBody.activate()}isSupported(){return void 0!==this.bjsAMMO}setLinearVelocity(t,s){this._tmpAmmoVectorA.setValue(s.x,s.y,s.z),t.soft?t.physicsBody.linearVelocity(this._tmpAmmoVectorA):t.physicsBody.setLinearVelocity(this._tmpAmmoVectorA)}setAngularVelocity(t,s){this._tmpAmmoVectorA.setValue(s.x,s.y,s.z),t.soft?t.physicsBody.angularVelocity(this._tmpAmmoVectorA):t.physicsBody.setAngularVelocity(this._tmpAmmoVectorA)}getLinearVelocity(t){let s;if(s=t.soft?t.physicsBody.linearVelocity():t.physicsBody.getLinearVelocity(),!s)return null;const e=new i.P(s.x(),s.y(),s.z());return this.bjsAMMO.destroy(s),e}getAngularVelocity(t){let s;if(s=t.soft?t.physicsBody.angularVelocity():t.physicsBody.getAngularVelocity(),!s)return null;const e=new i.P(s.x(),s.y(),s.z());return this.bjsAMMO.destroy(s),e}setBodyMass(t,s){t.soft?t.physicsBody.setTotalMass(s,!1):t.physicsBody.setMassProps(s),t._pluginData.mass=s}getBodyMass(t){return t._pluginData.mass||0}getBodyFriction(t){return t._pluginData.friction||0}setBodyFriction(t,s){t.soft?t.physicsBody.get_m_cfg().set_kDF(s):t.physicsBody.setFriction(s),t._pluginData.friction=s}getBodyRestitution(t){return t._pluginData.restitution||0}setBodyRestitution(t,s){t.physicsBody.setRestitution(s),t._pluginData.restitution=s}getBodyPressure(t){return t.soft?t._pluginData.pressure||0:(o.Y.Warn("Pressure is not a property of a rigid body"),0)}setBodyPressure(t,s){t.soft?t.type===n.Q.SoftbodyImpostor?(t.physicsBody.get_m_cfg().set_kPR(s),t._pluginData.pressure=s):(t.physicsBody.get_m_cfg().set_kPR(0),t._pluginData.pressure=0):o.Y.Warn("Pressure can only be applied to a softbody")}getBodyStiffness(t){return t.soft?t._pluginData.stiffness||0:(o.Y.Warn("Stiffness is not a property of a rigid body"),0)}setBodyStiffness(t,s){t.soft?(s=(s=s<0?0:s)>1?1:s,t.physicsBody.get_m_materials().at(0).set_m_kLST(s),t._pluginData.stiffness=s):o.Y.Warn("Stiffness cannot be applied to a rigid body")}getBodyVelocityIterations(t){return t.soft?t._pluginData.velocityIterations||0:(o.Y.Warn("Velocity iterations is not a property of a rigid body"),0)}setBodyVelocityIterations(t,s){t.soft?(s=s<0?0:s,t.physicsBody.get_m_cfg().set_viterations(s),t._pluginData.velocityIterations=s):o.Y.Warn("Velocity iterations cannot be applied to a rigid body")}getBodyPositionIterations(t){return t.soft?t._pluginData.positionIterations||0:(o.Y.Warn("Position iterations is not a property of a rigid body"),0)}setBodyPositionIterations(t,s){t.soft?(s=s<0?0:s,t.physicsBody.get_m_cfg().set_piterations(s),t._pluginData.positionIterations=s):o.Y.Warn("Position iterations cannot be applied to a rigid body")}appendAnchor(t,s,e,i,o=1,n=!1){const r=t.segments,a=Math.round((r-1)*e)+r*(r-1-Math.round((r-1)*i));t.physicsBody.appendAnchor(a,s.physicsBody,n,o)}appendHook(t,s,e,i=1,o=!1){const n=Math.round(t.segments*e);t.physicsBody.appendAnchor(n,s.physicsBody,o,i)}sleepBody(t){t.physicsBody.forceActivationState(0)}wakeUpBody(t){t.physicsBody.activate()}updateDistanceJoint(){o.Y.Warn("updateDistanceJoint is not currently supported by the Ammo physics plugin")}setMotor(t,s,e){t.physicsJoint.enableAngularMotor(!0,s,e)}setLimit(){o.Y.Warn("setLimit is not currently supported by the Ammo physics plugin")}syncMeshWithImpostor(t,s){s.physicsBody.getMotionState().getWorldTransform(this._tmpAmmoTransform),t.position.x=this._tmpAmmoTransform.getOrigin().x(),t.position.y=this._tmpAmmoTransform.getOrigin().y(),t.position.z=this._tmpAmmoTransform.getOrigin().z(),t.rotationQuaternion&&(t.rotationQuaternion.x=this._tmpAmmoTransform.getRotation().x(),t.rotationQuaternion.y=this._tmpAmmoTransform.getRotation().y(),t.rotationQuaternion.z=this._tmpAmmoTransform.getRotation().z(),t.rotationQuaternion.w=this._tmpAmmoTransform.getRotation().w())}getRadius(t){return t.getObjectExtents().x/2}getBoxSizeToRef(t,s){const e=t.getObjectExtents();s.x=e.x,s.y=e.y,s.z=e.z}dispose(){this.bjsAMMO.destroy(this.world),this.bjsAMMO.destroy(this._solver),this.bjsAMMO.destroy(this._overlappingPairCache),this.bjsAMMO.destroy(this._dispatcher),this.bjsAMMO.destroy(this._collisionConfiguration),this.bjsAMMO.destroy(this._tmpAmmoVectorA),this.bjsAMMO.destroy(this._tmpAmmoVectorB),this.bjsAMMO.destroy(this._tmpAmmoVectorC),this.bjsAMMO.destroy(this._tmpAmmoTransform),this.bjsAMMO.destroy(this._tmpAmmoQuaternion),this.bjsAMMO.destroy(this._tmpAmmoConcreteContactResultCallback),this.world=null}raycast(t,s){return this.raycastToRef(t,s,this._raycastResult),this._raycastResult}raycastToRef(t,s,e){this._tmpAmmoVectorRCA=new this.bjsAMMO.btVector3(t.x,t.y,t.z),this._tmpAmmoVectorRCB=new this.bjsAMMO.btVector3(s.x,s.y,s.z);const i=new this.bjsAMMO.ClosestRayResultCallback(this._tmpAmmoVectorRCA,this._tmpAmmoVectorRCB);this.world.rayTest(this._tmpAmmoVectorRCA,this._tmpAmmoVectorRCB,i),e.reset(t,s),i.hasHit()&&(e.setHitData({x:i.get_m_hitNormalWorld().x(),y:i.get_m_hitNormalWorld().y(),z:i.get_m_hitNormalWorld().z()},{x:i.get_m_hitPointWorld().x(),y:i.get_m_hitPointWorld().y(),z:i.get_m_hitPointWorld().z()}),e.calculateHitDistance()),this.bjsAMMO.destroy(i),this.bjsAMMO.destroy(this._tmpAmmoVectorRCA),this.bjsAMMO.destroy(this._tmpAmmoVectorRCB)}}y._DISABLE_COLLISION_FLAG=4,y._KINEMATIC_FLAG=2,y._DISABLE_DEACTIVATION_FLAG=4},83262:(t,s,e)=>{e.d(s,{Q:()=>l});var i=e(59288),o=e(32085),n=e(90972),r=e(87257),a=e(33632),h=e(17582),c=e(730);a.Kj._PhysicsImpostorParser=function(t,s,e){return new l(s,e.physicsImpostor,{mass:e.physicsMass,friction:e.physicsFriction,restitution:e.physicsRestitution},t)};class l{get isDisposed(){return this._isDisposed}get mass(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyMass(this):0}set mass(t){this.setMass(t)}get friction(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyFriction(this):0}set friction(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyFriction(this,t)}get restitution(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getBodyRestitution(this):0}set restitution(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyRestitution(this,t)}get pressure(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.setBodyPressure?t.getBodyPressure(this):0}set pressure(t){if(!this._physicsEngine)return;const s=this._physicsEngine.getPhysicsPlugin();s.setBodyPressure&&s.setBodyPressure(this,t)}get stiffness(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.getBodyStiffness?t.getBodyStiffness(this):0}set stiffness(t){if(!this._physicsEngine)return;const s=this._physicsEngine.getPhysicsPlugin();s.setBodyStiffness&&s.setBodyStiffness(this,t)}get velocityIterations(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.getBodyVelocityIterations?t.getBodyVelocityIterations(this):0}set velocityIterations(t){if(!this._physicsEngine)return;const s=this._physicsEngine.getPhysicsPlugin();s.setBodyVelocityIterations&&s.setBodyVelocityIterations(this,t)}get positionIterations(){if(!this._physicsEngine)return 0;const t=this._physicsEngine.getPhysicsPlugin();return t.getBodyPositionIterations?t.getBodyPositionIterations(this):0}set positionIterations(t){if(!this._physicsEngine)return;const s=this._physicsEngine.getPhysicsPlugin();s.setBodyPositionIterations&&s.setBodyPositionIterations(this,t)}constructor(t,s,e={mass:0},o){this.object=t,this.type=s,this._options=e,this._scene=o,this._pluginData={},this._bodyUpdateRequired=!1,this._onBeforePhysicsStepCallbacks=new Array,this._onAfterPhysicsStepCallbacks=new Array,this._onPhysicsCollideCallbacks=[],this._deltaPosition=n.P.Zero(),this._isDisposed=!1,this.soft=!1,this.segments=0,this._tmpQuat=new n._f,this._tmpQuat2=new n._f,this.beforeStep=()=>{this._physicsEngine&&(this.object.translate(this._deltaPosition,-1),this._deltaRotationConjugated&&this.object.rotationQuaternion&&this.object.rotationQuaternion.multiplyToRef(this._deltaRotationConjugated,this.object.rotationQuaternion),this.object.computeWorldMatrix(!1),this.object.parent&&this.object.rotationQuaternion?(this.getParentsRotation(),this._tmpQuat.multiplyToRef(this.object.rotationQuaternion,this._tmpQuat)):this._tmpQuat.copyFrom(this.object.rotationQuaternion||new n._f),this._options.disableBidirectionalTransformation||this.object.rotationQuaternion&&this._physicsEngine.getPhysicsPlugin().setPhysicsBodyTransformation(this,this.object.getAbsolutePosition(),this._tmpQuat),this._onBeforePhysicsStepCallbacks.forEach((t=>{t(this)})))},this.afterStep=()=>{this._physicsEngine&&(this._onAfterPhysicsStepCallbacks.forEach((t=>{t(this)})),this._physicsEngine.getPhysicsPlugin().setTransformationFromPhysicsBody(this),this.object.parent&&this.object.rotationQuaternion&&(this.getParentsRotation(),this._tmpQuat.conjugateInPlace(),this._tmpQuat.multiplyToRef(this.object.rotationQuaternion,this.object.rotationQuaternion)),this.object.setAbsolutePosition(this.object.position),this._deltaRotation?(this.object.rotationQuaternion&&this.object.rotationQuaternion.multiplyToRef(this._deltaRotation,this.object.rotationQuaternion),this._deltaPosition.applyRotationQuaternionToRef(this._deltaRotation,l._TmpVecs[0]),this.object.translate(l._TmpVecs[0],1)):this.object.translate(this._deltaPosition,1),this.object.computeWorldMatrix(!0))},this.onCollideEvent=null,this.onCollide=t=>{if(!this._onPhysicsCollideCallbacks.length&&!this.onCollideEvent)return;if(!this._physicsEngine)return;const s=this._physicsEngine.getImpostorWithPhysicsBody(t.body);s&&(this.onCollideEvent&&this.onCollideEvent(this,s),this._onPhysicsCollideCallbacks.filter((t=>-1!==t.otherImpostors.indexOf(s))).forEach((e=>{e.callback(this,s,t.point,t.distance,t.impulse,t.normal)})))},this.object?(this.object.parent&&0!==e.mass&&i.Y.Warn("A physics impostor has been created for an object which has a parent. Babylon physics currently works in local space so unexpected issues may occur."),!this._scene&&t.getScene&&(this._scene=t.getScene()),this._scene&&(this.type>100&&(this.soft=!0),this._physicsEngine=this._scene.getPhysicsEngine(),this._physicsEngine?(this.object.rotationQuaternion||(this.object.rotation?this.object.rotationQuaternion=n._f.RotationYawPitchRoll(this.object.rotation.y,this.object.rotation.x,this.object.rotation.z):this.object.rotationQuaternion=new n._f),this._options.mass=void 0===e.mass?0:e.mass,this._options.friction=void 0===e.friction?.2:e.friction,this._options.restitution=void 0===e.restitution?.2:e.restitution,this.soft&&(this._options.mass=this._options.mass>0?this._options.mass:1,this._options.pressure=void 0===e.pressure?200:e.pressure,this._options.stiffness=void 0===e.stiffness?1:e.stiffness,this._options.velocityIterations=void 0===e.velocityIterations?20:e.velocityIterations,this._options.positionIterations=void 0===e.positionIterations?20:e.positionIterations,this._options.fixedPoints=void 0===e.fixedPoints?0:e.fixedPoints,this._options.margin=void 0===e.margin?0:e.margin,this._options.damping=void 0===e.damping?0:e.damping,this._options.path=void 0===e.path?null:e.path,this._options.shape=void 0===e.shape?null:e.shape),this._joints=[],!this.object.parent||this._options.ignoreParent?this._init():this.object.parent.physicsImpostor&&i.Y.Warn("You must affect impostors to children before affecting impostor to parent.")):i.Y.Error("Physics not enabled. Please use scene.enablePhysics(...) before creating impostors."))):i.Y.Error("No object was provided. A physics object is obligatory")}_init(){this._physicsEngine&&(this._physicsEngine.removeImpostor(this),this.physicsBody=null,this._parent=this._parent||this._getPhysicsParent(),this._isDisposed||this.parent&&!this._options.ignoreParent||this._physicsEngine.addImpostor(this))}_getPhysicsParent(){return this.object.parent instanceof r.x?this.object.parent.physicsImpostor:null}isBodyInitRequired(){return this._bodyUpdateRequired||!this._physicsBody&&(!this._parent||!!this._options.ignoreParent)}setScalingUpdated(){this.forceUpdate()}forceUpdate(){this._init(),this.parent&&!this._options.ignoreParent&&this.parent.forceUpdate()}get physicsBody(){return this._parent&&!this._options.ignoreParent?this._parent.physicsBody:this._physicsBody}get parent(){return!this._options.ignoreParent&&this._parent?this._parent:null}set parent(t){this._parent=t}set physicsBody(t){this._physicsBody&&this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().removePhysicsBody(this),this._physicsBody=t,this.resetUpdateFlags()}resetUpdateFlags(){this._bodyUpdateRequired=!1}getObjectExtents(){if(this.object.getBoundingInfo){const t=this.object.rotationQuaternion,s=this.object.scaling.clone();this.object.rotationQuaternion=l.IDENTITY_QUATERNION;const e=this.object.computeWorldMatrix&&this.object.computeWorldMatrix(!0);e&&e.decompose(s,void 0,void 0);const i=this.object.getBoundingInfo().boundingBox.extendSize.scale(2).multiplyInPlace(s);return i.x=Math.abs(i.x),i.y=Math.abs(i.y),i.z=Math.abs(i.z),this.object.rotationQuaternion=t,this.object.computeWorldMatrix&&this.object.computeWorldMatrix(!0),i}return l.DEFAULT_OBJECT_SIZE}getObjectCenter(){return this.object.getBoundingInfo?this.object.getBoundingInfo().boundingBox.centerWorld:this.object.position}getParam(t){return this._options[t]}setParam(t,s){this._options[t]=s,this._bodyUpdateRequired=!0}setMass(t){this.getParam("mass")!==t&&this.setParam("mass",t),this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setBodyMass(this,t)}getLinearVelocity(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getLinearVelocity(this):n.P.Zero()}setLinearVelocity(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setLinearVelocity(this,t)}getAngularVelocity(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getAngularVelocity(this):n.P.Zero()}setAngularVelocity(t){this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().setAngularVelocity(this,t)}executeNativeFunction(t){this._physicsEngine&&t(this._physicsEngine.getPhysicsPlugin().world,this.physicsBody)}registerBeforePhysicsStep(t){this._onBeforePhysicsStepCallbacks.push(t)}unregisterBeforePhysicsStep(t){const s=this._onBeforePhysicsStepCallbacks.indexOf(t);s>-1?this._onBeforePhysicsStepCallbacks.splice(s,1):i.Y.Warn("Function to remove was not found")}registerAfterPhysicsStep(t){this._onAfterPhysicsStepCallbacks.push(t)}unregisterAfterPhysicsStep(t){const s=this._onAfterPhysicsStepCallbacks.indexOf(t);s>-1?this._onAfterPhysicsStepCallbacks.splice(s,1):i.Y.Warn("Function to remove was not found")}registerOnPhysicsCollide(t,s){const e=t instanceof Array?t:[t];this._onPhysicsCollideCallbacks.push({callback:s,otherImpostors:e})}unregisterOnPhysicsCollide(t,s){const e=t instanceof Array?t:[t];let o=-1;this._onPhysicsCollideCallbacks.some(((t,i)=>{if(t.callback===s&&t.otherImpostors.length===e.length){const s=t.otherImpostors.every((t=>e.indexOf(t)>-1));return s&&(o=i),s}return!1}))?this._onPhysicsCollideCallbacks.splice(o,1):i.Y.Warn("Function to remove was not found")}getParentsRotation(){let t=this.object.parent;for(this._tmpQuat.copyFromFloats(0,0,0,1);t;)t.rotationQuaternion?this._tmpQuat2.copyFrom(t.rotationQuaternion):n._f.RotationYawPitchRollToRef(t.rotation.y,t.rotation.x,t.rotation.z,this._tmpQuat2),this._tmpQuat.multiplyToRef(this._tmpQuat2,this._tmpQuat),t=t.parent;return this._tmpQuat}applyForce(t,s){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().applyForce(this,t,s),this}applyImpulse(t,s){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().applyImpulse(this,t,s),this}createJoint(t,s,e){const i=new h.q7(s,e);return this.addJoint(t,i),this}addJoint(t,s){return this._joints.push({otherImpostor:t,joint:s}),this._physicsEngine&&this._physicsEngine.addJoint(this,t,s),this}addAnchor(t,s,e,i,o){if(!this._physicsEngine)return this;const n=this._physicsEngine.getPhysicsPlugin();return n.appendAnchor?(this._physicsEngine&&n.appendAnchor(this,t,s,e,i,o),this):this}addHook(t,s,e,i){if(!this._physicsEngine)return this;const o=this._physicsEngine.getPhysicsPlugin();return o.appendAnchor?(this._physicsEngine&&o.appendHook(this,t,s,e,i),this):this}sleep(){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().sleepBody(this),this}wakeUp(){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().wakeUpBody(this),this}clone(t){return t?new l(t,this.type,this._options,this._scene):null}dispose(){this._physicsEngine&&(this._joints.forEach((t=>{this._physicsEngine&&this._physicsEngine.removeJoint(this,t.otherImpostor,t.joint)})),this._physicsEngine.removeImpostor(this),this.parent&&this.parent.forceUpdate(),this._isDisposed=!0)}setDeltaPosition(t){this._deltaPosition.copyFrom(t)}setDeltaRotation(t){this._deltaRotation||(this._deltaRotation=new n._f),this._deltaRotation.copyFrom(t),this._deltaRotationConjugated=this._deltaRotation.conjugate()}getBoxSizeToRef(t){return this._physicsEngine&&this._physicsEngine.getPhysicsPlugin().getBoxSizeToRef(this,t),this}getRadius(){return this._physicsEngine?this._physicsEngine.getPhysicsPlugin().getRadius(this):0}syncBoneWithImpostor(t,s,e,i,o){const n=l._TmpVecs[0],r=this.object;if(r.rotationQuaternion)if(o){const e=l._TmpQuat;r.rotationQuaternion.multiplyToRef(o,e),t.setRotationQuaternion(e,c.T.WORLD,s)}else t.setRotationQuaternion(r.rotationQuaternion,c.T.WORLD,s);n.x=0,n.y=0,n.z=0,e&&(n.x=e.x,n.y=e.y,n.z=e.z,t.getDirectionToRef(n,s,n),null==i&&(i=e.length()),n.x*=i,n.y*=i,n.z*=i),t.getParent()?(n.addInPlace(r.getAbsolutePosition()),t.setAbsolutePosition(n,s)):(s.setAbsolutePosition(r.getAbsolutePosition()),s.position.x-=n.x,s.position.y-=n.y,s.position.z-=n.z)}syncImpostorWithBone(t,s,e,i,o,n){const r=this.object;if(r.rotationQuaternion)if(o){const e=l._TmpQuat;t.getRotationQuaternionToRef(c.T.WORLD,s,e),e.multiplyToRef(o,r.rotationQuaternion)}else t.getRotationQuaternionToRef(c.T.WORLD,s,r.rotationQuaternion);const a=l._TmpVecs[0],h=l._TmpVecs[1];n||((n=l._TmpVecs[2]).x=0,n.y=1,n.z=0),t.getDirectionToRef(n,s,h),t.getAbsolutePositionToRef(s,a),null==i&&e&&(i=e.length()),null!=i&&(a.x+=h.x*i,a.y+=h.y*i,a.z+=h.z*i),r.setAbsolutePosition(a)}}l.DEFAULT_OBJECT_SIZE=new n.P(1,1,1),l.IDENTITY_QUATERNION=n._f.Identity(),l._TmpVecs=o.B.BuildArray(3,n.P.Zero),l._TmpQuat=n._f.Identity(),l.NoImpostor=0,l.SphereImpostor=1,l.BoxImpostor=2,l.PlaneImpostor=3,l.MeshImpostor=4,l.CapsuleImpostor=6,l.CylinderImpostor=7,l.ParticleImpostor=8,l.HeightmapImpostor=9,l.ConvexHullImpostor=10,l.CustomImpostor=100,l.RopeImpostor=101,l.ClothImpostor=102,l.SoftbodyImpostor=103},3135:(t,s,e)=>{var i=e(43127);e(13476),e(38380);i.v.ShadersStore.colorPixelShader="#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\n#define VERTEXCOLOR\nvarying vec4 vColor;\n#else\nuniform vec4 color;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\ngl_FragColor=vColor;\n#else\ngl_FragColor=color;\n#endif\n#define CUSTOM_FRAGMENT_MAIN_END\n}"},46789:(t,s,e)=>{var i=e(43127);e(1041),e(53652),e(82475),e(33816),e(47154),e(86886),e(64120),e(31252),e(19380);i.v.ShadersStore.colorVertexShader="attribute vec3 position;\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<clipPlaneVertexDeclaration>\n#include<instancesDeclaration>\nuniform mat4 viewProjection;\n#ifdef MULTIVIEW\nuniform mat4 viewProjectionR;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);\n#ifdef MULTIVIEW\nif (gl_ViewID_OVR==0u) {gl_Position=viewProjection*worldPos;} else {gl_Position=viewProjectionR*worldPos;}\n#else\ngl_Position=viewProjection*worldPos;\n#endif\n#include<clipPlaneVertex>\n#include<vertexColorMixing>\n#define CUSTOM_VERTEX_MAIN_END\n}"}}]);
//# sourceMappingURL=962.babylonBundle.js.map