"use strict";(self.webpackChunkbabylonjs_typescript_webpack_template=self.webpackChunkbabylonjs_typescript_webpack_template||[]).push([[803],{66089:(e,t,s)=>{s.d(t,{R:()=>S});var i=s(90972),r=s(83073),n=(s(11358),s(47827),s(62106),s(49938)),a=s(6070),o=s(9251),h=s(30889),d=s(59288),l=s(40078);const c=i.P.Up(),u=i.P.Zero(),_=new i.P,p=new i.P,f=new i.y3;class S extends a.u{_validateFilter(e){return e===a.u.FILTER_NONE||e===a.u.FILTER_PCF||e===a.u.FILTER_PCSS?e:(console.error('Unsupported filter "'+e+'"!'),a.u.FILTER_NONE)}get numCascades(){return this._numCascades}set numCascades(e){(e=Math.min(Math.max(e,S.MIN_CASCADES_COUNT),S.MAX_CASCADES_COUNT))!==this._numCascades&&(this._numCascades=e,this.recreateShadowMap(),this._recreateSceneUBOs())}get freezeShadowCastersBoundingInfo(){return this._freezeShadowCastersBoundingInfo}set freezeShadowCastersBoundingInfo(e){this._freezeShadowCastersBoundingInfoObservable&&e&&(this._scene.onBeforeRenderObservable.remove(this._freezeShadowCastersBoundingInfoObservable),this._freezeShadowCastersBoundingInfoObservable=null),this._freezeShadowCastersBoundingInfoObservable||e||(this._freezeShadowCastersBoundingInfoObservable=this._scene.onBeforeRenderObservable.add(this._computeShadowCastersBoundingInfo.bind(this))),this._freezeShadowCastersBoundingInfo=e,e&&this._computeShadowCastersBoundingInfo()}_computeShadowCastersBoundingInfo(){if(this._scbiMin.copyFromFloats(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._scbiMax.copyFromFloats(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._shadowMap&&this._shadowMap.renderList){const e=this._shadowMap.renderList;for(let t=0;t<e.length;t++){const s=e[t];if(!s)continue;const i=s.getBoundingInfo().boundingBox;this._scbiMin.minimizeInPlace(i.minimumWorld),this._scbiMax.maximizeInPlace(i.maximumWorld)}const t=this._scene.meshes;for(let e=0;e<t.length;e++){const s=t[e];if(!(s&&s.isVisible&&s.isEnabled&&s.receiveShadows))continue;const i=s.getBoundingInfo().boundingBox;this._scbiMin.minimizeInPlace(i.minimumWorld),this._scbiMax.maximizeInPlace(i.maximumWorld)}}this._shadowCastersBoundingInfo.reConstruct(this._scbiMin,this._scbiMax)}get shadowCastersBoundingInfo(){return this._shadowCastersBoundingInfo}set shadowCastersBoundingInfo(e){this._shadowCastersBoundingInfo=e}setMinMaxDistance(e,t){this._minDistance===e&&this._maxDistance===t||(e>t&&(e=0,t=1),e<0&&(e=0),t>1&&(t=1),this._minDistance=e,this._maxDistance=t,this._breaksAreDirty=!0)}get minDistance(){return this._minDistance}get maxDistance(){return this._maxDistance}getClassName(){return S.CLASSNAME}getCascadeMinExtents(e){return e>=0&&e<this._numCascades?this._cascadeMinExtents[e]:null}getCascadeMaxExtents(e){return e>=0&&e<this._numCascades?this._cascadeMaxExtents[e]:null}get shadowMaxZ(){return this._getCamera()?this._shadowMaxZ:0}set shadowMaxZ(e){const t=this._getCamera();t?this._shadowMaxZ===e||e<t.minZ||e>t.maxZ||(this._shadowMaxZ=e,this._light._markMeshesAsLightDirty(),this._breaksAreDirty=!0):this._shadowMaxZ=e}get debug(){return this._debug}set debug(e){this._debug=e,this._light._markMeshesAsLightDirty()}get depthClamp(){return this._depthClamp}set depthClamp(e){this._depthClamp=e}get cascadeBlendPercentage(){return this._cascadeBlendPercentage}set cascadeBlendPercentage(e){this._cascadeBlendPercentage=e,this._light._markMeshesAsLightDirty()}get lambda(){return this._lambda}set lambda(e){const t=Math.min(Math.max(e,0),1);this._lambda!=t&&(this._lambda=t,this._breaksAreDirty=!0)}getCascadeViewMatrix(e){return e>=0&&e<this._numCascades?this._viewMatrices[e]:null}getCascadeProjectionMatrix(e){return e>=0&&e<this._numCascades?this._projectionMatrices[e]:null}getCascadeTransformMatrix(e){return e>=0&&e<this._numCascades?this._transformMatrices[e]:null}setDepthRenderer(e){this._depthRenderer=e,this._depthReducer&&this._depthReducer.setDepthRenderer(this._depthRenderer)}get autoCalcDepthBounds(){return this._autoCalcDepthBounds}set autoCalcDepthBounds(e){const t=this._getCamera();if(t){if(this._autoCalcDepthBounds=e,!e)return this._depthReducer&&this._depthReducer.deactivate(),void this.setMinMaxDistance(0,1);this._depthReducer||(this._depthReducer=new h.j(t),this._depthReducer.onAfterReductionPerformed.add((e=>{let t=e.min,s=e.max;t>=s&&(t=0,s=1),t==this._minDistance&&s==this._maxDistance||this.setMinMaxDistance(t,s)})),this._depthReducer.setDepthRenderer(this._depthRenderer)),this._depthReducer.activate()}}get autoCalcDepthBoundsRefreshRate(){var e,t,s;return null!==(s=null===(t=null===(e=this._depthReducer)||void 0===e?void 0:e.depthRenderer)||void 0===t?void 0:t.getDepthMap().refreshRate)&&void 0!==s?s:-1}set autoCalcDepthBoundsRefreshRate(e){var t;(null===(t=this._depthReducer)||void 0===t?void 0:t.depthRenderer)&&(this._depthReducer.depthRenderer.getDepthMap().refreshRate=e)}splitFrustum(){this._breaksAreDirty=!0}_splitFrustum(){const e=this._getCamera();if(!e)return;const t=e.minZ,s=e.maxZ||this._shadowMaxZ,i=s-t,r=this._minDistance,n=t+r*i,a=t+(this._shadowMaxZ<s&&this._shadowMaxZ>=t?Math.min((this._shadowMaxZ-t)/(s-t),this._maxDistance):this._maxDistance)*i,o=a-n,h=a/n;for(let e=0;e<this._cascades.length;++e){const s=(e+1)/this._numCascades,a=n*h**s,d=n+o*s,l=this._lambda*(a-d)+d;this._cascades[e].prevBreakDistance=0===e?r:this._cascades[e-1].breakDistance,this._cascades[e].breakDistance=(l-t)/i,this._viewSpaceFrustumsZ[e]=l,this._frustumLengths[e]=(this._cascades[e].breakDistance-this._cascades[e].prevBreakDistance)*i}this._breaksAreDirty=!1}_computeMatrices(){const e=this._scene;if(!this._getCamera())return;i.P.NormalizeToRef(this._light.getShadowDirection(0),this._lightDirection),1===Math.abs(i.P.Dot(this._lightDirection,i.P.Up()))&&(this._lightDirection.z=1e-13),this._cachedDirection.copyFrom(this._lightDirection);const t=e.getEngine().useReverseDepthBuffer;for(let s=0;s<this._numCascades;++s){this._computeFrustumInWorldSpace(s),this._computeCascadeFrustum(s),this._cascadeMaxExtents[s].subtractToRef(this._cascadeMinExtents[s],_),this._frustumCenter[s].addToRef(this._lightDirection.scale(this._cascadeMinExtents[s].z),this._shadowCameraPos[s]),i.y3.LookAtLHToRef(this._shadowCameraPos[s],this._frustumCenter[s],c,this._viewMatrices[s]);let r=0,n=_.z;const o=this._shadowCastersBoundingInfo;o.update(this._viewMatrices[s]),n=Math.min(n,o.boundingBox.maximumWorld.z),r=this._depthClamp&&this.filter!==a.u.FILTER_PCSS?Math.max(r,o.boundingBox.minimumWorld.z):Math.min(r,o.boundingBox.minimumWorld.z),i.y3.OrthoOffCenterLHToRef(this._cascadeMinExtents[s].x,this._cascadeMaxExtents[s].x,this._cascadeMinExtents[s].y,this._cascadeMaxExtents[s].y,t?n:r,t?r:n,this._projectionMatrices[s],e.getEngine().isNDCHalfZRange),this._cascadeMinExtents[s].z=r,this._cascadeMaxExtents[s].z=n,this._viewMatrices[s].multiplyToRef(this._projectionMatrices[s],this._transformMatrices[s]),i.P.TransformCoordinatesToRef(u,this._transformMatrices[s],_),_.scaleInPlace(this._mapSize/2),p.copyFromFloats(Math.round(_.x),Math.round(_.y),Math.round(_.z)),p.subtractInPlace(_).scaleInPlace(2/this._mapSize),i.y3.TranslationToRef(p.x,p.y,0,f),this._projectionMatrices[s].multiplyToRef(f,this._projectionMatrices[s]),this._viewMatrices[s].multiplyToRef(this._projectionMatrices[s],this._transformMatrices[s]),this._transformMatrices[s].copyToArray(this._transformMatricesAsArray,16*s)}}_computeFrustumInWorldSpace(e){const t=this._getCamera();if(!t)return;const s=this._cascades[e].prevBreakDistance,r=this._cascades[e].breakDistance,n=this._scene.getEngine().isNDCHalfZRange;t.getViewMatrix();const a=0===t.maxZ,o=t.maxZ;a&&(t.maxZ=this._shadowMaxZ,t.getProjectionMatrix(!0));const h=i.y3.Invert(t.getTransformationMatrix());a&&(t.maxZ=o,t.getProjectionMatrix(!0));const d=this._scene.getEngine().useReverseDepthBuffer?4:0;for(let t=0;t<S._FrustumCornersNDCSpace.length;++t)_.copyFrom(S._FrustumCornersNDCSpace[(t+d)%S._FrustumCornersNDCSpace.length]),n&&-1===_.z&&(_.z=0),i.P.TransformCoordinatesToRef(_,h,this._frustumCornersWorldSpace[e][t]);for(let t=0;t<S._FrustumCornersNDCSpace.length/2;++t)_.copyFrom(this._frustumCornersWorldSpace[e][t+4]).subtractInPlace(this._frustumCornersWorldSpace[e][t]),p.copyFrom(_).scaleInPlace(s),_.scaleInPlace(r),_.addInPlace(this._frustumCornersWorldSpace[e][t]),this._frustumCornersWorldSpace[e][t+4].copyFrom(_),this._frustumCornersWorldSpace[e][t].addInPlace(p)}_computeCascadeFrustum(e){if(this._cascadeMinExtents[e].copyFromFloats(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cascadeMaxExtents[e].copyFromFloats(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),this._frustumCenter[e].copyFromFloats(0,0,0),this._getCamera()){for(let t=0;t<this._frustumCornersWorldSpace[e].length;++t)this._frustumCenter[e].addInPlace(this._frustumCornersWorldSpace[e][t]);if(this._frustumCenter[e].scaleInPlace(1/this._frustumCornersWorldSpace[e].length),this.stabilizeCascades){let t=0;for(let s=0;s<this._frustumCornersWorldSpace[e].length;++s){const i=this._frustumCornersWorldSpace[e][s].subtractToRef(this._frustumCenter[e],_).length();t=Math.max(t,i)}t=Math.ceil(16*t)/16,this._cascadeMaxExtents[e].copyFromFloats(t,t,t),this._cascadeMinExtents[e].copyFromFloats(-t,-t,-t)}else{const t=this._frustumCenter[e];this._frustumCenter[e].addToRef(this._lightDirection,_),i.y3.LookAtLHToRef(t,_,c,f);for(let t=0;t<this._frustumCornersWorldSpace[e].length;++t)i.P.TransformCoordinatesToRef(this._frustumCornersWorldSpace[e][t],f,_),this._cascadeMinExtents[e].minimizeInPlace(_),this._cascadeMaxExtents[e].maximizeInPlace(_)}}}_recreateSceneUBOs(){if(this._disposeSceneUBOs(),this._sceneUBOs)for(let e=0;e<this._numCascades;++e)this._sceneUBOs.push(this._scene.createSceneUniformBuffer(`Scene for CSM Shadow Generator (light "${this._light.name}" cascade #${e})`))}static get IsSupported(){const e=l.l.LastCreatedEngine;return!!e&&e._features.supportCSM}constructor(e,t,s,i,r=!0){S.IsSupported?(super(e,t,s,i,r),this.usePercentageCloserFiltering=!0):d.Y.Error("CascadedShadowMap is not supported by the current engine.")}_initializeGenerator(){var e,t,s,r,n,a,h,d,l,c,u,_,p,f,M,g,m,x,E,T;this.penumbraDarkness=null!==(e=this.penumbraDarkness)&&void 0!==e?e:1,this._numCascades=null!==(t=this._numCascades)&&void 0!==t?t:S.DEFAULT_CASCADES_COUNT,this.stabilizeCascades=null!==(s=this.stabilizeCascades)&&void 0!==s&&s,this._freezeShadowCastersBoundingInfoObservable=null!==(r=this._freezeShadowCastersBoundingInfoObservable)&&void 0!==r?r:null,this.freezeShadowCastersBoundingInfo=null!==(n=this.freezeShadowCastersBoundingInfo)&&void 0!==n&&n,this._scbiMin=null!==(a=this._scbiMin)&&void 0!==a?a:new i.P(0,0,0),this._scbiMax=null!==(h=this._scbiMax)&&void 0!==h?h:new i.P(0,0,0),this._shadowCastersBoundingInfo=null!==(d=this._shadowCastersBoundingInfo)&&void 0!==d?d:new o.j(new i.P(0,0,0),new i.P(0,0,0)),this._breaksAreDirty=null===(l=this._breaksAreDirty)||void 0===l||l,this._minDistance=null!==(c=this._minDistance)&&void 0!==c?c:0,this._maxDistance=null!==(u=this._maxDistance)&&void 0!==u?u:1,this._currentLayer=null!==(_=this._currentLayer)&&void 0!==_?_:0,this._shadowMaxZ=null!==(M=null!==(p=this._shadowMaxZ)&&void 0!==p?p:null===(f=this._getCamera())||void 0===f?void 0:f.maxZ)&&void 0!==M?M:1e4,this._debug=null!==(g=this._debug)&&void 0!==g&&g,this._depthClamp=null===(m=this._depthClamp)||void 0===m||m,this._cascadeBlendPercentage=null!==(x=this._cascadeBlendPercentage)&&void 0!==x?x:.1,this._lambda=null!==(E=this._lambda)&&void 0!==E?E:.5,this._autoCalcDepthBounds=null!==(T=this._autoCalcDepthBounds)&&void 0!==T&&T,this._recreateSceneUBOs(),super._initializeGenerator()}_createTargetRenderTexture(){const e=this._scene.getEngine(),t={width:this._mapSize,height:this._mapSize,layers:this.numCascades};this._shadowMap=new r._(this._light.name+"_CSMShadowMap",t,this._scene,!1,!0,this._textureType,!1,void 0,!1,!1,void 0,this._useRedTextureType?6:5),this._shadowMap.createDepthStencilTexture(e.useReverseDepthBuffer?516:513,!0),this._shadowMap.noPrePassRenderer=!0}_initializeShadowMap(){if(super._initializeShadowMap(),null===this._shadowMap)return;this._transformMatricesAsArray=new Float32Array(16*this._numCascades),this._viewSpaceFrustumsZ=new Array(this._numCascades),this._frustumLengths=new Array(this._numCascades),this._lightSizeUVCorrection=new Array(2*this._numCascades),this._depthCorrection=new Array(this._numCascades),this._cascades=[],this._viewMatrices=[],this._projectionMatrices=[],this._transformMatrices=[],this._cascadeMinExtents=[],this._cascadeMaxExtents=[],this._frustumCenter=[],this._shadowCameraPos=[],this._frustumCornersWorldSpace=[];for(let e=0;e<this._numCascades;++e){this._cascades[e]={prevBreakDistance:0,breakDistance:0},this._viewMatrices[e]=i.y3.Zero(),this._projectionMatrices[e]=i.y3.Zero(),this._transformMatrices[e]=i.y3.Zero(),this._cascadeMinExtents[e]=new i.P,this._cascadeMaxExtents[e]=new i.P,this._frustumCenter[e]=new i.P,this._shadowCameraPos[e]=new i.P,this._frustumCornersWorldSpace[e]=new Array(S._FrustumCornersNDCSpace.length);for(let t=0;t<S._FrustumCornersNDCSpace.length;++t)this._frustumCornersWorldSpace[e][t]=new i.P}const e=this._scene.getEngine();this._shadowMap.onBeforeBindObservable.clear(),this._shadowMap.onBeforeRenderObservable.clear(),this._shadowMap.onBeforeRenderObservable.add((t=>{this._sceneUBOs&&this._scene.setSceneUniformBuffer(this._sceneUBOs[t]),this._currentLayer=t,this._filter===a.u.FILTER_PCF&&e.setColorWrite(!1),this._scene.setTransformMatrix(this.getCascadeViewMatrix(t),this.getCascadeProjectionMatrix(t)),this._useUBO&&(this._scene.getSceneUniformBuffer().unbindEffect(),this._scene.finalizeSceneUbo())})),this._shadowMap.onBeforeBindObservable.add((()=>{var t;this._currentSceneUBO=this._scene.getSceneUniformBuffer(),null===(t=e._debugPushGroup)||void 0===t||t.call(e,`cascaded shadow map generation for pass id ${e.currentRenderPassId}`,1),this._breaksAreDirty&&this._splitFrustum(),this._computeMatrices()})),this._splitFrustum()}_bindCustomEffectForRenderSubMeshForShadowMap(e,t){t.setMatrix("viewProjection",this.getCascadeTransformMatrix(this._currentLayer))}_isReadyCustomDefines(e){e.push("#define SM_DEPTHCLAMP "+(this._depthClamp&&this._filter!==a.u.FILTER_PCSS?"1":"0"))}prepareDefines(e,t){super.prepareDefines(e,t);const s=this._scene,i=this._light;if(!s.shadowsEnabled||!i.shadowEnabled)return;e["SHADOWCSM"+t]=!0,e["SHADOWCSMDEBUG"+t]=this.debug,e["SHADOWCSMNUM_CASCADES"+t]=this.numCascades,e["SHADOWCSM_RIGHTHANDED"+t]=s.useRightHandedSystem;const r=this._getCamera();r&&this._shadowMaxZ<=(r.maxZ||this._shadowMaxZ)&&(e["SHADOWCSMUSESHADOWMAXZ"+t]=!0),0===this.cascadeBlendPercentage&&(e["SHADOWCSMNOBLEND"+t]=!0)}bindShadowLight(e,t){const s=this._light;if(!this._scene.shadowsEnabled||!s.shadowEnabled)return;const i=this._getCamera();if(!i)return;const r=this.getShadowMap();if(!r)return;const n=r.getSize().width;if(t.setMatrices("lightMatrix"+e,this._transformMatricesAsArray),t.setArray("viewFrustumZ"+e,this._viewSpaceFrustumsZ),t.setFloat("cascadeBlendFactor"+e,0===this.cascadeBlendPercentage?1e4:1/this.cascadeBlendPercentage),t.setArray("frustumLengths"+e,this._frustumLengths),this._filter===a.u.FILTER_PCF)t.setDepthStencilTexture("shadowSampler"+e,r),s._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),n,1/n,this.frustumEdgeFalloff,e);else if(this._filter===a.u.FILTER_PCSS){for(let e=0;e<this._numCascades;++e)this._lightSizeUVCorrection[2*e+0]=0===e?1:(this._cascadeMaxExtents[0].x-this._cascadeMinExtents[0].x)/(this._cascadeMaxExtents[e].x-this._cascadeMinExtents[e].x),this._lightSizeUVCorrection[2*e+1]=0===e?1:(this._cascadeMaxExtents[0].y-this._cascadeMinExtents[0].y)/(this._cascadeMaxExtents[e].y-this._cascadeMinExtents[e].y),this._depthCorrection[e]=0===e?1:(this._cascadeMaxExtents[e].z-this._cascadeMinExtents[e].z)/(this._cascadeMaxExtents[0].z-this._cascadeMinExtents[0].z);t.setDepthStencilTexture("shadowSampler"+e,r),t.setTexture("depthSampler"+e,r),t.setArray2("lightSizeUVCorrection"+e,this._lightSizeUVCorrection),t.setArray("depthCorrection"+e,this._depthCorrection),t.setFloat("penumbraDarkness"+e,this.penumbraDarkness),s._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),1/n,this._contactHardeningLightSizeUVRatio*n,this.frustumEdgeFalloff,e)}else t.setTexture("shadowSampler"+e,r),s._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),n,1/n,this.frustumEdgeFalloff,e);s._uniformBuffer.updateFloat2("depthValues",this.getLight().getDepthMinZ(i),this.getLight().getDepthMinZ(i)+this.getLight().getDepthMaxZ(i),e)}getTransformMatrix(){return this.getCascadeTransformMatrix(0)}dispose(){super.dispose(),this._freezeShadowCastersBoundingInfoObservable&&(this._scene.onBeforeRenderObservable.remove(this._freezeShadowCastersBoundingInfoObservable),this._freezeShadowCastersBoundingInfoObservable=null),this._depthReducer&&(this._depthReducer.dispose(),this._depthReducer=null)}serialize(){const e=super.serialize(),t=this.getShadowMap();if(!t)return e;if(e.numCascades=this._numCascades,e.debug=this._debug,e.stabilizeCascades=this.stabilizeCascades,e.lambda=this._lambda,e.cascadeBlendPercentage=this.cascadeBlendPercentage,e.depthClamp=this._depthClamp,e.autoCalcDepthBounds=this.autoCalcDepthBounds,e.shadowMaxZ=this._shadowMaxZ,e.penumbraDarkness=this.penumbraDarkness,e.freezeShadowCastersBoundingInfo=this._freezeShadowCastersBoundingInfo,e.minDistance=this.minDistance,e.maxDistance=this.maxDistance,e.renderList=[],t.renderList)for(let s=0;s<t.renderList.length;s++){const i=t.renderList[s];e.renderList.push(i.id)}return e}static Parse(e,t){const s=a.u.Parse(e,t,((e,t,s)=>new S(e,t,void 0,s)));return void 0!==e.numCascades&&(s.numCascades=e.numCascades),void 0!==e.debug&&(s.debug=e.debug),void 0!==e.stabilizeCascades&&(s.stabilizeCascades=e.stabilizeCascades),void 0!==e.lambda&&(s.lambda=e.lambda),void 0!==e.cascadeBlendPercentage&&(s.cascadeBlendPercentage=e.cascadeBlendPercentage),void 0!==e.depthClamp&&(s.depthClamp=e.depthClamp),void 0!==e.autoCalcDepthBounds&&(s.autoCalcDepthBounds=e.autoCalcDepthBounds),void 0!==e.shadowMaxZ&&(s.shadowMaxZ=e.shadowMaxZ),void 0!==e.penumbraDarkness&&(s.penumbraDarkness=e.penumbraDarkness),void 0!==e.freezeShadowCastersBoundingInfo&&(s.freezeShadowCastersBoundingInfo=e.freezeShadowCastersBoundingInfo),void 0!==e.minDistance&&void 0!==e.maxDistance&&s.setMinMaxDistance(e.minDistance,e.maxDistance),s}}S._FrustumCornersNDCSpace=[new i.P(-1,1,-1),new i.P(1,1,-1),new i.P(1,-1,-1),new i.P(-1,-1,-1),new i.P(-1,1,1),new i.P(1,1,1),new i.P(1,-1,1),new i.P(-1,-1,1)],S.CLASSNAME="CascadedShadowGenerator",S.DEFAULT_CASCADES_COUNT=4,S.MIN_CASCADES_COUNT=2,S.MAX_CASCADES_COUNT=4,S._SceneComponentInitialization=e=>{throw(0,n.S)("ShadowGeneratorSceneComponent")}},6070:(e,t,s)=>{s.d(t,{u:()=>g});var i=s(90972),r=s(89859),n=s(37959),a=s(85046),o=s(96721),h=s(84684),d=s(83073),l=s(31932),c=s(44774),u=s(64673),_=s(49938),p=s(43092),f=s(17800),S=s(62813);s(11358),s(47827),s(62106);s(43127).v.IncludesShadersStore.shadowMapFragmentSoftTransparentShadow="#if SM_SOFTTRANSPARENTSHADOW==1\nif ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM*alpha) discard;\n#endif\n";var M=s(28981);class g{get bias(){return this._bias}set bias(e){this._bias=e}get normalBias(){return this._normalBias}set normalBias(e){this._normalBias=e}get blurBoxOffset(){return this._blurBoxOffset}set blurBoxOffset(e){this._blurBoxOffset!==e&&(this._blurBoxOffset=e,this._disposeBlurPostProcesses())}get blurScale(){return this._blurScale}set blurScale(e){this._blurScale!==e&&(this._blurScale=e,this._disposeBlurPostProcesses())}get blurKernel(){return this._blurKernel}set blurKernel(e){this._blurKernel!==e&&(this._blurKernel=e,this._disposeBlurPostProcesses())}get useKernelBlur(){return this._useKernelBlur}set useKernelBlur(e){this._useKernelBlur!==e&&(this._useKernelBlur=e,this._disposeBlurPostProcesses())}get depthScale(){return void 0!==this._depthScale?this._depthScale:this._light.getDepthScale()}set depthScale(e){this._depthScale=e}_validateFilter(e){return e}get filter(){return this._filter}set filter(e){if(e=this._validateFilter(e),this._light.needCube()){if(e===g.FILTER_BLUREXPONENTIALSHADOWMAP)return void(this.useExponentialShadowMap=!0);if(e===g.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP)return void(this.useCloseExponentialShadowMap=!0);if(e===g.FILTER_PCF||e===g.FILTER_PCSS)return void(this.usePoissonSampling=!0)}e!==g.FILTER_PCF&&e!==g.FILTER_PCSS||this._scene.getEngine()._features.supportShadowSamplers?this._filter!==e&&(this._filter=e,this._disposeBlurPostProcesses(),this._applyFilterValues(),this._light._markMeshesAsLightDirty()):this.usePoissonSampling=!0}get usePoissonSampling(){return this.filter===g.FILTER_POISSONSAMPLING}set usePoissonSampling(e){const t=this._validateFilter(g.FILTER_POISSONSAMPLING);(e||this.filter===g.FILTER_POISSONSAMPLING)&&(this.filter=e?t:g.FILTER_NONE)}get useExponentialShadowMap(){return this.filter===g.FILTER_EXPONENTIALSHADOWMAP}set useExponentialShadowMap(e){const t=this._validateFilter(g.FILTER_EXPONENTIALSHADOWMAP);(e||this.filter===g.FILTER_EXPONENTIALSHADOWMAP)&&(this.filter=e?t:g.FILTER_NONE)}get useBlurExponentialShadowMap(){return this.filter===g.FILTER_BLUREXPONENTIALSHADOWMAP}set useBlurExponentialShadowMap(e){const t=this._validateFilter(g.FILTER_BLUREXPONENTIALSHADOWMAP);(e||this.filter===g.FILTER_BLUREXPONENTIALSHADOWMAP)&&(this.filter=e?t:g.FILTER_NONE)}get useCloseExponentialShadowMap(){return this.filter===g.FILTER_CLOSEEXPONENTIALSHADOWMAP}set useCloseExponentialShadowMap(e){const t=this._validateFilter(g.FILTER_CLOSEEXPONENTIALSHADOWMAP);(e||this.filter===g.FILTER_CLOSEEXPONENTIALSHADOWMAP)&&(this.filter=e?t:g.FILTER_NONE)}get useBlurCloseExponentialShadowMap(){return this.filter===g.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP}set useBlurCloseExponentialShadowMap(e){const t=this._validateFilter(g.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP);(e||this.filter===g.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP)&&(this.filter=e?t:g.FILTER_NONE)}get usePercentageCloserFiltering(){return this.filter===g.FILTER_PCF}set usePercentageCloserFiltering(e){const t=this._validateFilter(g.FILTER_PCF);(e||this.filter===g.FILTER_PCF)&&(this.filter=e?t:g.FILTER_NONE)}get filteringQuality(){return this._filteringQuality}set filteringQuality(e){this._filteringQuality!==e&&(this._filteringQuality=e,this._disposeBlurPostProcesses(),this._applyFilterValues(),this._light._markMeshesAsLightDirty())}get useContactHardeningShadow(){return this.filter===g.FILTER_PCSS}set useContactHardeningShadow(e){const t=this._validateFilter(g.FILTER_PCSS);(e||this.filter===g.FILTER_PCSS)&&(this.filter=e?t:g.FILTER_NONE)}get contactHardeningLightSizeUVRatio(){return this._contactHardeningLightSizeUVRatio}set contactHardeningLightSizeUVRatio(e){this._contactHardeningLightSizeUVRatio=e}get darkness(){return this._darkness}set darkness(e){this.setDarkness(e)}getDarkness(){return this._darkness}setDarkness(e){return this._darkness=e>=1?1:e<=0?0:e,this}get transparencyShadow(){return this._transparencyShadow}set transparencyShadow(e){this.setTransparencyShadow(e)}setTransparencyShadow(e){return this._transparencyShadow=e,this}getShadowMap(){return this._shadowMap}getShadowMapForRendering(){return this._shadowMap2?this._shadowMap2:this._shadowMap}getClassName(){return g.CLASSNAME}addShadowCaster(e,t=!0){if(!this._shadowMap)return this;if(this._shadowMap.renderList||(this._shadowMap.renderList=[]),-1===this._shadowMap.renderList.indexOf(e)&&this._shadowMap.renderList.push(e),t)for(const t of e.getChildMeshes())-1===this._shadowMap.renderList.indexOf(t)&&this._shadowMap.renderList.push(t);return this}removeShadowCaster(e,t=!0){if(!this._shadowMap||!this._shadowMap.renderList)return this;const s=this._shadowMap.renderList.indexOf(e);if(-1!==s&&this._shadowMap.renderList.splice(s,1),t)for(const t of e.getChildren())this.removeShadowCaster(t);return this}getLight(){return this._light}_getCamera(){var e;return null!==(e=this._camera)&&void 0!==e?e:this._scene.activeCamera}get mapSize(){return this._mapSize}set mapSize(e){this._mapSize=e,this._light._markMeshesAsLightDirty(),this.recreateShadowMap()}constructor(e,t,s,r,n){this.onBeforeShadowMapRenderObservable=new u.y$,this.onAfterShadowMapRenderObservable=new u.y$,this.onBeforeShadowMapRenderMeshObservable=new u.y$,this.onAfterShadowMapRenderMeshObservable=new u.y$,this._bias=5e-5,this._normalBias=0,this._blurBoxOffset=1,this._blurScale=2,this._blurKernel=1,this._useKernelBlur=!1,this._filter=g.FILTER_NONE,this._filteringQuality=g.QUALITY_HIGH,this._contactHardeningLightSizeUVRatio=.1,this._darkness=0,this._transparencyShadow=!1,this.enableSoftTransparentShadow=!1,this.useOpacityTextureForTransparentShadow=!1,this.frustumEdgeFalloff=0,this.forceBackFacesOnly=!1,this._lightDirection=i.P.Zero(),this._viewMatrix=i.y3.Zero(),this._projectionMatrix=i.y3.Zero(),this._transformMatrix=i.y3.Zero(),this._cachedPosition=new i.P(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._cachedDirection=new i.P(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this._currentFaceIndex=0,this._currentFaceIndexCache=0,this._defaultTextureMatrix=i.y3.Identity(),this._mapSize=e,this._light=t,this._scene=t.getScene(),this._camera=null!=r?r:null,this._useRedTextureType=!!n;let a=t._shadowGenerators;a||(a=t._shadowGenerators=new Map),a.set(this._camera,this),this.id=t.id,this._useUBO=this._scene.getEngine().supportsUniformBuffers,this._useUBO&&(this._sceneUBOs=[],this._sceneUBOs.push(this._scene.createSceneUniformBuffer(`Scene for Shadow Generator (light "${this._light.name}")`))),g._SceneComponentInitialization(this._scene);const o=this._scene.getEngine().getCaps();s?o.textureFloatRender&&o.textureFloatLinearFiltering?this._textureType=1:o.textureHalfFloatRender&&o.textureHalfFloatLinearFiltering?this._textureType=2:this._textureType=0:o.textureHalfFloatRender&&o.textureHalfFloatLinearFiltering?this._textureType=2:o.textureFloatRender&&o.textureFloatLinearFiltering?this._textureType=1:this._textureType=0,this._initializeGenerator(),this._applyFilterValues()}_initializeGenerator(){this._light._markMeshesAsLightDirty(),this._initializeShadowMap()}_createTargetRenderTexture(){const e=this._scene.getEngine();e._features.supportDepthStencilTexture?(this._shadowMap=new d._(this._light.name+"_shadowMap",this._mapSize,this._scene,!1,!0,this._textureType,this._light.needCube(),void 0,!1,!1,void 0,this._useRedTextureType?6:5),this._shadowMap.createDepthStencilTexture(e.useReverseDepthBuffer?516:513,!0)):this._shadowMap=new d._(this._light.name+"_shadowMap",this._mapSize,this._scene,!1,!0,this._textureType,this._light.needCube()),this._shadowMap.noPrePassRenderer=!0}_initializeShadowMap(){if(this._createTargetRenderTexture(),null===this._shadowMap)return;this._shadowMap.wrapU=h.x.CLAMP_ADDRESSMODE,this._shadowMap.wrapV=h.x.CLAMP_ADDRESSMODE,this._shadowMap.anisotropicFilteringLevel=1,this._shadowMap.updateSamplingMode(h.x.BILINEAR_SAMPLINGMODE),this._shadowMap.renderParticles=!1,this._shadowMap.ignoreCameraViewport=!0,this._storedUniqueId&&(this._shadowMap.uniqueId=this._storedUniqueId),this._shadowMap.customRenderFunction=this._renderForShadowMap.bind(this),this._shadowMap.customIsReadyFunction=()=>!0;const e=this._scene.getEngine();this._shadowMap.onBeforeBindObservable.add((()=>{var t;this._currentSceneUBO=this._scene.getSceneUniformBuffer(),null===(t=e._debugPushGroup)||void 0===t||t.call(e,`shadow map generation for pass id ${e.currentRenderPassId}`,1)})),this._shadowMap.onBeforeRenderObservable.add((t=>{this._sceneUBOs&&this._scene.setSceneUniformBuffer(this._sceneUBOs[0]),this._currentFaceIndex=t,this._filter===g.FILTER_PCF&&e.setColorWrite(!1),this.getTransformMatrix(),this._scene.setTransformMatrix(this._viewMatrix,this._projectionMatrix),this._useUBO&&(this._scene.getSceneUniformBuffer().unbindEffect(),this._scene.finalizeSceneUbo())})),this._shadowMap.onAfterUnbindObservable.add((()=>{var t,s;if(this._sceneUBOs&&this._scene.setSceneUniformBuffer(this._currentSceneUBO),this._scene.updateTransformMatrix(),this._filter===g.FILTER_PCF&&e.setColorWrite(!0),!this.useBlurExponentialShadowMap&&!this.useBlurCloseExponentialShadowMap)return void(null===(t=e._debugPopGroup)||void 0===t||t.call(e,1));const i=this.getShadowMapForRendering();i&&(this._scene.postProcessManager.directRender(this._blurPostProcesses,i.renderTarget,!0),e.unBindFramebuffer(i.renderTarget,!0),null===(s=e._debugPopGroup)||void 0===s||s.call(e,1))}));const t=new r.HE(0,0,0,0),s=new r.HE(1,1,1,1);this._shadowMap.onClearObservable.add((e=>{this._filter===g.FILTER_PCF?e.clear(s,!1,!0,!1):this.useExponentialShadowMap||this.useBlurExponentialShadowMap?e.clear(t,!0,!0,!1):e.clear(s,!0,!0,!1)})),this._shadowMap.onResizeObservable.add((e=>{this._storedUniqueId=this._shadowMap.uniqueId,this._mapSize=e.getRenderSize(),this._light._markMeshesAsLightDirty(),this.recreateShadowMap()}));for(let e=f.$.MIN_RENDERINGGROUPS;e<f.$.MAX_RENDERINGGROUPS;e++)this._shadowMap.setRenderingAutoClearDepthStencil(e,!1)}_initializeBlurRTTAndPostProcesses(){const e=this._scene.getEngine(),t=this._mapSize/this.blurScale;this.useKernelBlur&&1===this.blurScale||(this._shadowMap2=new d._(this._light.name+"_shadowMap2",t,this._scene,!1,!0,this._textureType,void 0,void 0,!1),this._shadowMap2.wrapU=h.x.CLAMP_ADDRESSMODE,this._shadowMap2.wrapV=h.x.CLAMP_ADDRESSMODE,this._shadowMap2.updateSamplingMode(h.x.BILINEAR_SAMPLINGMODE)),this.useKernelBlur?(this._kernelBlurXPostprocess=new c.i(this._light.name+"KernelBlurX",new i.FM(1,0),this.blurKernel,1,null,h.x.BILINEAR_SAMPLINGMODE,e,!1,this._textureType),this._kernelBlurXPostprocess.width=t,this._kernelBlurXPostprocess.height=t,this._kernelBlurXPostprocess.externalTextureSamplerBinding=!0,this._kernelBlurXPostprocess.onApplyObservable.add((e=>{e.setTexture("textureSampler",this._shadowMap)})),this._kernelBlurYPostprocess=new c.i(this._light.name+"KernelBlurY",new i.FM(0,1),this.blurKernel,1,null,h.x.BILINEAR_SAMPLINGMODE,e,!1,this._textureType),this._kernelBlurXPostprocess.autoClear=!1,this._kernelBlurYPostprocess.autoClear=!1,0===this._textureType&&(this._kernelBlurXPostprocess.packedFloat=!0,this._kernelBlurYPostprocess.packedFloat=!0),this._blurPostProcesses=[this._kernelBlurXPostprocess,this._kernelBlurYPostprocess]):(this._boxBlurPostprocess=new l.D(this._light.name+"DepthBoxBlur","depthBoxBlur",["screenSize","boxOffset"],[],1,null,h.x.BILINEAR_SAMPLINGMODE,e,!1,"#define OFFSET "+this._blurBoxOffset,this._textureType),this._boxBlurPostprocess.externalTextureSamplerBinding=!0,this._boxBlurPostprocess.onApplyObservable.add((e=>{e.setFloat2("screenSize",t,t),e.setTexture("textureSampler",this._shadowMap)})),this._boxBlurPostprocess.autoClear=!1,this._blurPostProcesses=[this._boxBlurPostprocess])}_renderForShadowMap(e,t,s,i){let r;if(i.length)for(r=0;r<i.length;r++)this._renderSubMeshForShadowMap(i.data[r]);for(r=0;r<e.length;r++)this._renderSubMeshForShadowMap(e.data[r]);for(r=0;r<t.length;r++)this._renderSubMeshForShadowMap(t.data[r]);if(this._transparencyShadow)for(r=0;r<s.length;r++)this._renderSubMeshForShadowMap(s.data[r],!0);else for(r=0;r<s.length;r++)s.data[r].getEffectiveMesh()._internalAbstractMeshDataInfo._isActiveIntermediate=!1}_bindCustomEffectForRenderSubMeshForShadowMap(e,t,s){t.setMatrix("viewProjection",this.getTransformMatrix())}_renderSubMeshForShadowMap(e,t=!1){var s,i;const r=e.getRenderingMesh(),n=e.getEffectiveMesh(),h=this._scene,d=h.getEngine(),l=e.getMaterial();if(n._internalAbstractMeshDataInfo._isActiveIntermediate=!1,!l||0===e.verticesCount||e._renderId===h.getRenderId())return;const c=n._getWorldMatrixDeterminant()<0;let u=null!==(s=r.overrideMaterialSideOrientation)&&void 0!==s?s:l.sideOrientation;c&&(u=0===u?1:0);const _=0===u;d.setState(l.backFaceCulling,void 0,void 0,_,l.cullBackFaces);const p=r._getInstancesRenderList(e._id,!!e.getReplacementMesh());if(p.mustReturn)return;const f=d.getCaps().instancedArrays&&(null!==p.visibleInstances[e._id]&&void 0!==p.visibleInstances[e._id]||r.hasThinInstances);if(!this.customAllowRendering||this.customAllowRendering(e))if(this.isReady(e,f,t)){e._renderId=h.getRenderId();const s=l.shadowDepthWrapper,c=null!==(i=null==s?void 0:s.getEffect(e,this,d.currentRenderPassId))&&void 0!==i?i:e._getDrawWrapper(),u=S.q.GetEffect(c);d.enableEffect(c),f||r._bind(e,u,l.fillMode),this.getTransformMatrix(),u.setFloat3("biasAndScaleSM",this.bias,this.normalBias,this.depthScale),this.getLight().getTypeID()===a._.LIGHTTYPEID_DIRECTIONALLIGHT?u.setVector3("lightDataSM",this._cachedDirection):u.setVector3("lightDataSM",this._cachedPosition);const _=this._getCamera();if(_&&u.setFloat2("depthValuesSM",this.getLight().getDepthMinZ(_),this.getLight().getDepthMinZ(_)+this.getLight().getDepthMaxZ(_)),t&&this.enableSoftTransparentShadow&&u.setFloat("softTransparentShadowSM",n.visibility*l.alpha),s)e._setMainDrawWrapperOverride(c),s.standalone?s.baseMaterial.bindForSubMesh(n.getWorldMatrix(),r,e):l.bindForSubMesh(n.getWorldMatrix(),r,e),e._setMainDrawWrapperOverride(null);else{if(this._opacityTexture&&(u.setTexture("diffuseSampler",this._opacityTexture),u.setMatrix("diffuseMatrix",this._opacityTexture.getTextureMatrix()||this._defaultTextureMatrix)),r.useBones&&r.computeBonesUsingShaders&&r.skeleton){const e=r.skeleton;if(e.isUsingTextureForMatrices){const t=e.getTransformMatrixTexture(r);if(!t)return;u.setTexture("boneSampler",t),u.setFloat("boneTextureWidth",4*(e.bones.length+1))}else u.setMatrices("mBones",e.getTransformMatrices(r))}o.G.BindMorphTargetParameters(r,u),r.morphTargetManager&&r.morphTargetManager.isUsingTextureForTargets&&r.morphTargetManager._bind(u),(0,M.an)(u,l,h)}this._useUBO||s||this._bindCustomEffectForRenderSubMeshForShadowMap(e,u,n),o.G.BindSceneUniformBuffer(u,this._scene.getSceneUniformBuffer()),this._scene.getSceneUniformBuffer().bindUniformBuffer();const g=n.getWorldMatrix();f&&(n.getMeshUniformBuffer().bindToEffect(u,"Mesh"),n.transferToEffect(g)),this.forceBackFacesOnly&&d.setState(!0,0,!1,!0,l.cullBackFaces),this.onBeforeShadowMapRenderMeshObservable.notifyObservers(r),this.onBeforeShadowMapRenderObservable.notifyObservers(u),r._processRendering(n,e,u,l.fillMode,p,f,((e,t)=>{n===r||e?(n.getMeshUniformBuffer().bindToEffect(u,"Mesh"),n.transferToEffect(e?t:g)):(r.getMeshUniformBuffer().bindToEffect(u,"Mesh"),r.transferToEffect(t))})),this.forceBackFacesOnly&&d.setState(!0,0,!1,!1,l.cullBackFaces),this.onAfterShadowMapRenderObservable.notifyObservers(u),this.onAfterShadowMapRenderMeshObservable.notifyObservers(r)}else this._shadowMap&&this._shadowMap.resetRefreshCounter()}_applyFilterValues(){this._shadowMap&&(this.filter===g.FILTER_NONE||this.filter===g.FILTER_PCSS?this._shadowMap.updateSamplingMode(h.x.NEAREST_SAMPLINGMODE):this._shadowMap.updateSamplingMode(h.x.BILINEAR_SAMPLINGMODE))}forceCompilation(e,t){const s=Object.assign({useInstances:!1},t),i=this.getShadowMap();if(!i)return void(e&&e(this));const r=i.renderList;if(!r)return void(e&&e(this));const n=new Array;for(const e of r)n.push(...e.subMeshes);if(0===n.length)return void(e&&e(this));let a=0;const o=()=>{var t,i;if(this._scene&&this._scene.getEngine()){for(;this.isReady(n[a],s.useInstances,null!==(i=null===(t=n[a].getMaterial())||void 0===t?void 0:t.needAlphaBlendingForMesh(n[a].getMesh()))&&void 0!==i&&i);)if(a++,a>=n.length)return void(e&&e(this));setTimeout(o,16)}};o()}forceCompilationAsync(e){return new Promise((t=>{this.forceCompilation((()=>{t()}),e)}))}_isReadyCustomDefines(e,t,s){}_prepareShadowDefines(e,t,s,i){s.push("#define SM_LIGHTTYPE_"+this._light.getClassName().toUpperCase()),s.push("#define SM_FLOAT "+(0!==this._textureType?"1":"0")),s.push("#define SM_ESM "+(this.useExponentialShadowMap||this.useBlurExponentialShadowMap?"1":"0")),s.push("#define SM_DEPTHTEXTURE "+(this.usePercentageCloserFiltering||this.useContactHardeningShadow?"1":"0"));const r=e.getMesh();return s.push("#define SM_NORMALBIAS "+(this.normalBias&&r.isVerticesDataPresent(n.o.NormalKind)?"1":"0")),s.push("#define SM_DIRECTIONINLIGHTDATA "+(this.getLight().getTypeID()===a._.LIGHTTYPEID_DIRECTIONALLIGHT?"1":"0")),s.push("#define SM_USEDISTANCE "+(this._light.needCube()?"1":"0")),s.push("#define SM_SOFTTRANSPARENTSHADOW "+(this.enableSoftTransparentShadow&&i?"1":"0")),this._isReadyCustomDefines(s,e,t),s}isReady(e,t,s){var i;const r=e.getMaterial(),a=null==r?void 0:r.shadowDepthWrapper;if(this._opacityTexture=null,!r)return!1;const h=[];if(this._prepareShadowDefines(e,t,h,s),a){if(!a.isReadyForSubMesh(e,h,this,t,this._scene.getEngine().currentRenderPassId))return!1}else{const s=e._getDrawWrapper(void 0,!0);let a=s.effect,d=s.defines;const l=[n.o.PositionKind],c=e.getMesh();this.normalBias&&c.isVerticesDataPresent(n.o.NormalKind)&&(l.push(n.o.NormalKind),h.push("#define NORMAL"),c.nonUniformScaling&&h.push("#define NONUNIFORMSCALING"));const u=r.needAlphaTesting();if((u||r.needAlphaBlending())&&(this.useOpacityTextureForTransparentShadow?this._opacityTexture=r.opacityTexture:this._opacityTexture=r.getAlphaTestTexture(),this._opacityTexture)){if(!this._opacityTexture.isReady())return!1;const e=null!==(i=r.alphaCutOff)&&void 0!==i?i:g.DEFAULT_ALPHA_CUTOFF;h.push("#define ALPHATEXTURE"),u&&h.push(`#define ALPHATESTVALUE ${e}${e%1==0?".":""}`),c.isVerticesDataPresent(n.o.UVKind)&&(l.push(n.o.UVKind),h.push("#define UV1")),c.isVerticesDataPresent(n.o.UV2Kind)&&1===this._opacityTexture.coordinatesIndex&&(l.push(n.o.UV2Kind),h.push("#define UV2"))}const _=new p.L;if(c.useBones&&c.computeBonesUsingShaders&&c.skeleton){l.push(n.o.MatricesIndicesKind),l.push(n.o.MatricesWeightsKind),c.numBoneInfluencers>4&&(l.push(n.o.MatricesIndicesExtraKind),l.push(n.o.MatricesWeightsExtraKind));const e=c.skeleton;h.push("#define NUM_BONE_INFLUENCERS "+c.numBoneInfluencers),c.numBoneInfluencers>0&&_.addCPUSkinningFallback(0,c),e.isUsingTextureForMatrices?h.push("#define BONETEXTURE"):h.push("#define BonesPerMesh "+(e.bones.length+1))}else h.push("#define NUM_BONE_INFLUENCERS 0");const f=c.morphTargetManager;let S=0;if(f&&f.numInfluencers>0&&(h.push("#define MORPHTARGETS"),S=f.numInfluencers,h.push("#define NUM_MORPH_INFLUENCERS "+S),f.isUsingTextureForTargets&&h.push("#define MORPHTARGETS_TEXTURE"),o.G.PrepareAttributesForMorphTargetsInfluencers(l,c,S)),(0,M.lK)(r,this._scene,h),t&&(h.push("#define INSTANCES"),o.G.PushAttributesForInstances(l),e.getRenderingMesh().hasThinInstances&&h.push("#define THIN_INSTANCES")),this.customShaderOptions&&this.customShaderOptions.defines)for(const e of this.customShaderOptions.defines)-1===h.indexOf(e)&&h.push(e);const m=h.join("\n");if(d!==m){d=m;let e="shadowMap";const t=["world","mBones","viewProjection","diffuseMatrix","lightDataSM","depthValuesSM","biasAndScaleSM","morphTargetInfluences","boneTextureWidth","softTransparentShadowSM","morphTargetTextureInfo","morphTargetTextureIndices"],i=["diffuseSampler","boneSampler","morphTargets"],r=["Scene","Mesh"];if((0,M.qx)(t),this.customShaderOptions){if(e=this.customShaderOptions.shaderName,this.customShaderOptions.attributes)for(const e of this.customShaderOptions.attributes)-1===l.indexOf(e)&&l.push(e);if(this.customShaderOptions.uniforms)for(const e of this.customShaderOptions.uniforms)-1===t.indexOf(e)&&t.push(e);if(this.customShaderOptions.samplers)for(const e of this.customShaderOptions.samplers)-1===i.indexOf(e)&&i.push(e)}const n=this._scene.getEngine();a=n.createEffect(e,{attributes:l,uniformsNames:t,uniformBuffersNames:r,samplers:i,defines:m,fallbacks:_,onCompiled:null,onError:null,indexParameters:{maxSimultaneousMorphTargets:S}},n),s.setEffect(a,d)}if(!a.isReady())return!1}return(this.useBlurExponentialShadowMap||this.useBlurCloseExponentialShadowMap)&&(this._blurPostProcesses&&this._blurPostProcesses.length||this._initializeBlurRTTAndPostProcesses()),!(this._kernelBlurXPostprocess&&!this._kernelBlurXPostprocess.isReady()||this._kernelBlurYPostprocess&&!this._kernelBlurYPostprocess.isReady()||this._boxBlurPostprocess&&!this._boxBlurPostprocess.isReady())}prepareDefines(e,t){const s=this._scene,i=this._light;s.shadowsEnabled&&i.shadowEnabled&&(e["SHADOW"+t]=!0,this.useContactHardeningShadow?(e["SHADOWPCSS"+t]=!0,this._filteringQuality===g.QUALITY_LOW?e["SHADOWLOWQUALITY"+t]=!0:this._filteringQuality===g.QUALITY_MEDIUM&&(e["SHADOWMEDIUMQUALITY"+t]=!0)):this.usePercentageCloserFiltering?(e["SHADOWPCF"+t]=!0,this._filteringQuality===g.QUALITY_LOW?e["SHADOWLOWQUALITY"+t]=!0:this._filteringQuality===g.QUALITY_MEDIUM&&(e["SHADOWMEDIUMQUALITY"+t]=!0)):this.usePoissonSampling?e["SHADOWPOISSON"+t]=!0:this.useExponentialShadowMap||this.useBlurExponentialShadowMap?e["SHADOWESM"+t]=!0:(this.useCloseExponentialShadowMap||this.useBlurCloseExponentialShadowMap)&&(e["SHADOWCLOSEESM"+t]=!0),i.needCube()&&(e["SHADOWCUBE"+t]=!0))}bindShadowLight(e,t){const s=this._light;if(!this._scene.shadowsEnabled||!s.shadowEnabled)return;const i=this._getCamera();if(!i)return;const r=this.getShadowMap();r&&(s.needCube()||t.setMatrix("lightMatrix"+e,this.getTransformMatrix()),this._filter===g.FILTER_PCF?(t.setDepthStencilTexture("shadowSampler"+e,this.getShadowMapForRendering()),s._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),r.getSize().width,1/r.getSize().width,this.frustumEdgeFalloff,e)):this._filter===g.FILTER_PCSS?(t.setDepthStencilTexture("shadowSampler"+e,this.getShadowMapForRendering()),t.setTexture("depthSampler"+e,this.getShadowMapForRendering()),s._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),1/r.getSize().width,this._contactHardeningLightSizeUVRatio*r.getSize().width,this.frustumEdgeFalloff,e)):(t.setTexture("shadowSampler"+e,this.getShadowMapForRendering()),s._uniformBuffer.updateFloat4("shadowsInfo",this.getDarkness(),this.blurScale/r.getSize().width,this.depthScale,this.frustumEdgeFalloff,e)),s._uniformBuffer.updateFloat2("depthValues",this.getLight().getDepthMinZ(i),this.getLight().getDepthMinZ(i)+this.getLight().getDepthMaxZ(i),e))}getTransformMatrix(){const e=this._scene;if(this._currentRenderId===e.getRenderId()&&this._currentFaceIndexCache===this._currentFaceIndex)return this._transformMatrix;this._currentRenderId=e.getRenderId(),this._currentFaceIndexCache=this._currentFaceIndex;let t=this._light.position;if(this._light.computeTransformedInformation()&&(t=this._light.transformedPosition),i.P.NormalizeToRef(this._light.getShadowDirection(this._currentFaceIndex),this._lightDirection),1===Math.abs(i.P.Dot(this._lightDirection,i.P.Up()))&&(this._lightDirection.z=1e-13),this._light.needProjectionMatrixCompute()||!this._cachedPosition||!this._cachedDirection||!t.equals(this._cachedPosition)||!this._lightDirection.equals(this._cachedDirection)){this._cachedPosition.copyFrom(t),this._cachedDirection.copyFrom(this._lightDirection),i.y3.LookAtLHToRef(t,t.add(this._lightDirection),i.P.Up(),this._viewMatrix);const e=this.getShadowMap();if(e){const t=e.renderList;t&&this._light.setShadowProjectionMatrix(this._projectionMatrix,this._viewMatrix,t)}this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix)}return this._transformMatrix}recreateShadowMap(){const e=this._shadowMap;if(!e)return;const t=e.renderList;if(this._disposeRTTandPostProcesses(),this._initializeGenerator(),this.filter=this._filter,this._applyFilterValues(),t){this._shadowMap.renderList||(this._shadowMap.renderList=[]);for(const e of t)this._shadowMap.renderList.push(e)}else this._shadowMap.renderList=null}_disposeBlurPostProcesses(){this._shadowMap2&&(this._shadowMap2.dispose(),this._shadowMap2=null),this._boxBlurPostprocess&&(this._boxBlurPostprocess.dispose(),this._boxBlurPostprocess=null),this._kernelBlurXPostprocess&&(this._kernelBlurXPostprocess.dispose(),this._kernelBlurXPostprocess=null),this._kernelBlurYPostprocess&&(this._kernelBlurYPostprocess.dispose(),this._kernelBlurYPostprocess=null),this._blurPostProcesses=[]}_disposeRTTandPostProcesses(){this._shadowMap&&(this._shadowMap.dispose(),this._shadowMap=null),this._disposeBlurPostProcesses()}_disposeSceneUBOs(){if(this._sceneUBOs){for(const e of this._sceneUBOs)e.dispose();this._sceneUBOs=[]}}dispose(){if(this._disposeRTTandPostProcesses(),this._disposeSceneUBOs(),this._light){if(this._light._shadowGenerators){const e=this._light._shadowGenerators.entries();for(let t=e.next();!0!==t.done;t=e.next()){const[e,s]=t.value;s===this&&this._light._shadowGenerators.delete(e)}0===this._light._shadowGenerators.size&&(this._light._shadowGenerators=null)}this._light._markMeshesAsLightDirty()}this.onBeforeShadowMapRenderMeshObservable.clear(),this.onBeforeShadowMapRenderObservable.clear(),this.onAfterShadowMapRenderMeshObservable.clear(),this.onAfterShadowMapRenderObservable.clear()}serialize(){var e;const t={},s=this.getShadowMap();if(!s)return t;if(t.className=this.getClassName(),t.lightId=this._light.id,t.cameraId=null===(e=this._camera)||void 0===e?void 0:e.id,t.id=this.id,t.mapSize=s.getRenderSize(),t.forceBackFacesOnly=this.forceBackFacesOnly,t.darkness=this.getDarkness(),t.transparencyShadow=this._transparencyShadow,t.frustumEdgeFalloff=this.frustumEdgeFalloff,t.bias=this.bias,t.normalBias=this.normalBias,t.usePercentageCloserFiltering=this.usePercentageCloserFiltering,t.useContactHardeningShadow=this.useContactHardeningShadow,t.contactHardeningLightSizeUVRatio=this.contactHardeningLightSizeUVRatio,t.filteringQuality=this.filteringQuality,t.useExponentialShadowMap=this.useExponentialShadowMap,t.useBlurExponentialShadowMap=this.useBlurExponentialShadowMap,t.useCloseExponentialShadowMap=this.useBlurExponentialShadowMap,t.useBlurCloseExponentialShadowMap=this.useBlurExponentialShadowMap,t.usePoissonSampling=this.usePoissonSampling,t.depthScale=this.depthScale,t.blurBoxOffset=this.blurBoxOffset,t.blurKernel=this.blurKernel,t.blurScale=this.blurScale,t.useKernelBlur=this.useKernelBlur,t.renderList=[],s.renderList)for(let e=0;e<s.renderList.length;e++){const i=s.renderList[e];t.renderList.push(i.id)}return t}static Parse(e,t,s){const i=t.getLightById(e.lightId),r=void 0!==e.cameraId?t.getCameraById(e.cameraId):null,n=s?s(e.mapSize,i,r):new g(e.mapSize,i,void 0,r),a=n.getShadowMap();for(let s=0;s<e.renderList.length;s++)t.getMeshesById(e.renderList[s]).forEach((function(e){a&&(a.renderList||(a.renderList=[]),a.renderList.push(e))}));return void 0!==e.id&&(n.id=e.id),n.forceBackFacesOnly=!!e.forceBackFacesOnly,void 0!==e.darkness&&n.setDarkness(e.darkness),e.transparencyShadow&&n.setTransparencyShadow(!0),void 0!==e.frustumEdgeFalloff&&(n.frustumEdgeFalloff=e.frustumEdgeFalloff),void 0!==e.bias&&(n.bias=e.bias),void 0!==e.normalBias&&(n.normalBias=e.normalBias),e.usePercentageCloserFiltering?n.usePercentageCloserFiltering=!0:e.useContactHardeningShadow?n.useContactHardeningShadow=!0:e.usePoissonSampling?n.usePoissonSampling=!0:e.useExponentialShadowMap?n.useExponentialShadowMap=!0:e.useBlurExponentialShadowMap?n.useBlurExponentialShadowMap=!0:e.useCloseExponentialShadowMap?n.useCloseExponentialShadowMap=!0:e.useBlurCloseExponentialShadowMap?n.useBlurCloseExponentialShadowMap=!0:e.useVarianceShadowMap?n.useExponentialShadowMap=!0:e.useBlurVarianceShadowMap&&(n.useBlurExponentialShadowMap=!0),void 0!==e.contactHardeningLightSizeUVRatio&&(n.contactHardeningLightSizeUVRatio=e.contactHardeningLightSizeUVRatio),void 0!==e.filteringQuality&&(n.filteringQuality=e.filteringQuality),e.depthScale&&(n.depthScale=e.depthScale),e.blurScale&&(n.blurScale=e.blurScale),e.blurBoxOffset&&(n.blurBoxOffset=e.blurBoxOffset),e.useKernelBlur&&(n.useKernelBlur=e.useKernelBlur),e.blurKernel&&(n.blurKernel=e.blurKernel),n}}g.CLASSNAME="ShadowGenerator",g.FILTER_NONE=0,g.FILTER_EXPONENTIALSHADOWMAP=1,g.FILTER_POISSONSAMPLING=2,g.FILTER_BLUREXPONENTIALSHADOWMAP=3,g.FILTER_CLOSEEXPONENTIALSHADOWMAP=4,g.FILTER_BLURCLOSEEXPONENTIALSHADOWMAP=5,g.FILTER_PCF=6,g.FILTER_PCSS=7,g.QUALITY_HIGH=0,g.QUALITY_MEDIUM=1,g.QUALITY_LOW=2,g.DEFAULT_ALPHA_CUTOFF=.5,g._SceneComponentInitialization=e=>{throw(0,_.S)("ShadowGeneratorSceneComponent")}},30889:(e,t,s)=>{s.d(t,{j:()=>n});var i=s(21984),r=s(28740);class n extends r.d{get depthRenderer(){return this._depthRenderer}constructor(e){super(e)}setDepthRenderer(e=null,t=2,s=!0){const r=this._camera.getScene();this._depthRenderer&&(delete r._depthRenderer[this._depthRendererId],this._depthRenderer.dispose(),this._depthRenderer=null),null===e&&(r._depthRenderer||(r._depthRenderer={}),(e=this._depthRenderer=new i.g(r,t,this._camera,!1,1)).enabled=!1,this._depthRendererId="minmax"+this._camera.id,r._depthRenderer[this._depthRendererId]=e),super.setSourceTexture(e.getDepthMap(),!0,t,s)}setSourceTexture(e,t,s=2,i=!0){super.setSourceTexture(e,t,s,i)}activate(){this._depthRenderer&&(this._depthRenderer.enabled=!0),super.activate()}deactivate(){super.deactivate(),this._depthRenderer&&(this._depthRenderer.enabled=!1)}dispose(e=!0){if(super.dispose(e),this._depthRenderer&&e){const e=this._depthRenderer.getDepthMap().getScene();e&&delete e._depthRenderer[this._depthRendererId],this._depthRenderer.dispose(),this._depthRenderer=null}}}},28740:(e,t,s)=>{s.d(t,{d:()=>a});var i=s(64673),r=s(31932),n=s(3114);s(43127).v.ShadersStore.minmaxReduxPixelShader="varying vec2 vUV;uniform sampler2D textureSampler;\n#if defined(INITIAL)\nuniform sampler2D sourceTexture;uniform vec2 texSize;void main(void)\n{ivec2 coord=ivec2(vUV*(texSize-1.0));float f1=texelFetch(sourceTexture,coord,0).r;float f2=texelFetch(sourceTexture,coord+ivec2(1,0),0).r;float f3=texelFetch(sourceTexture,coord+ivec2(1,1),0).r;float f4=texelFetch(sourceTexture,coord+ivec2(0,1),0).r;float minz=min(min(min(f1,f2),f3),f4);\n#ifdef DEPTH_REDUX\nfloat maxz=max(max(max(sign(1.0-f1)*f1,sign(1.0-f2)*f2),sign(1.0-f3)*f3),sign(1.0-f4)*f4);\n#else\nfloat maxz=max(max(max(f1,f2),f3),f4);\n#endif\nglFragColor=vec4(minz,maxz,0.,0.);}\n#elif defined(MAIN)\nuniform vec2 texSize;void main(void)\n{ivec2 coord=ivec2(vUV*(texSize-1.0));vec2 f1=texelFetch(textureSampler,coord,0).rg;vec2 f2=texelFetch(textureSampler,coord+ivec2(1,0),0).rg;vec2 f3=texelFetch(textureSampler,coord+ivec2(1,1),0).rg;vec2 f4=texelFetch(textureSampler,coord+ivec2(0,1),0).rg;float minz=min(min(min(f1.x,f2.x),f3.x),f4.x);float maxz=max(max(max(f1.y,f2.y),f3.y),f4.y);glFragColor=vec4(minz,maxz,0.,0.);}\n#elif defined(ONEBEFORELAST)\nuniform ivec2 texSize;void main(void)\n{ivec2 coord=ivec2(vUV*vec2(texSize-1));vec2 f1=texelFetch(textureSampler,coord % texSize,0).rg;vec2 f2=texelFetch(textureSampler,(coord+ivec2(1,0)) % texSize,0).rg;vec2 f3=texelFetch(textureSampler,(coord+ivec2(1,1)) % texSize,0).rg;vec2 f4=texelFetch(textureSampler,(coord+ivec2(0,1)) % texSize,0).rg;float minz=min(f1.x,f2.x);float maxz=max(f1.y,f2.y);glFragColor=vec4(minz,maxz,0.,0.);}\n#elif defined(LAST)\nvoid main(void)\n{glFragColor=vec4(0.);if (true) { \ndiscard;}}\n#endif\n";class a{constructor(e){this.onAfterReductionPerformed=new i.y$,this._forceFullscreenViewport=!0,this._activated=!1,this._camera=e,this._postProcessManager=new n.O(e.getScene()),this._onContextRestoredObserver=e.getEngine().onContextRestoredObservable.add((()=>{this._postProcessManager._rebuild()}))}get sourceTexture(){return this._sourceTexture}setSourceTexture(e,t,s=2,i=!0){if(e===this._sourceTexture)return;this.dispose(!1),this._sourceTexture=e,this._reductionSteps=[],this._forceFullscreenViewport=i;const n=this._camera.getScene(),a=new r.D("Initial reduction phase","minmaxRedux",["texSize"],["sourceTexture"],1,null,1,n.getEngine(),!1,"#define INITIAL"+(t?"\n#define DEPTH_REDUX":""),s,void 0,void 0,void 0,7);a.autoClear=!1,a.forceFullscreenViewport=i;let o=this._sourceTexture.getRenderWidth(),h=this._sourceTexture.getRenderHeight();a.onApply=((e,t)=>s=>{s.setTexture("sourceTexture",this._sourceTexture),s.setFloat2("texSize",e,t)})(o,h),this._reductionSteps.push(a);let d=1;for(;o>1||h>1;){o=Math.max(Math.round(o/2),1),h=Math.max(Math.round(h/2),1);const e=new r.D("Reduction phase "+d,"minmaxRedux",["texSize"],null,{width:o,height:h},null,1,n.getEngine(),!1,"#define "+(1==o&&1==h?"LAST":1==o||1==h?"ONEBEFORELAST":"MAIN"),s,void 0,void 0,void 0,7);if(e.autoClear=!1,e.forceFullscreenViewport=i,e.onApply=((e,t)=>s=>{1==e||1==t?s.setInt2("texSize",e,t):s.setFloat2("texSize",e,t)})(o,h),this._reductionSteps.push(e),d++,1==o&&1==h){const t=(e,t,s)=>{const i=new Float32Array(4*e*t),r={min:0,max:0};return()=>{n.getEngine()._readTexturePixels(s.inputTexture.texture,e,t,-1,0,i,!1),r.min=i[0],r.max=i[1],this.onAfterReductionPerformed.notifyObservers(r)}};e.onAfterRenderObservable.add(t(o,h,e))}}}get refreshRate(){return this._sourceTexture?this._sourceTexture.refreshRate:-1}set refreshRate(e){this._sourceTexture&&(this._sourceTexture.refreshRate=e)}get activated(){return this._activated}activate(){!this._onAfterUnbindObserver&&this._sourceTexture&&(this._onAfterUnbindObserver=this._sourceTexture.onAfterUnbindObservable.add((()=>{var e,t;const s=this._camera.getScene().getEngine();null===(e=s._debugPushGroup)||void 0===e||e.call(s,"min max reduction",1),this._reductionSteps[0].activate(this._camera),this._postProcessManager.directRender(this._reductionSteps,this._reductionSteps[0].inputTexture,this._forceFullscreenViewport),s.unBindFramebuffer(this._reductionSteps[0].inputTexture,!1),null===(t=s._debugPopGroup)||void 0===t||t.call(s,1)})),this._activated=!0)}deactivate(){this._onAfterUnbindObserver&&this._sourceTexture&&(this._sourceTexture.onAfterUnbindObservable.remove(this._onAfterUnbindObserver),this._onAfterUnbindObserver=null,this._activated=!1)}dispose(e=!0){if(e&&(this.onAfterReductionPerformed.clear(),this._onContextRestoredObserver&&(this._camera.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)),this.deactivate(),this._reductionSteps){for(let e=0;e<this._reductionSteps.length;++e)this._reductionSteps[e].dispose();this._reductionSteps=null}this._postProcessManager&&e&&this._postProcessManager.dispose(),this._sourceTexture=null}}},21984:(e,t,s)=>{s.d(t,{g:()=>u});var i=s(89859),r=s(37959),n=s(84684),a=s(83073),o=s(96721),h=s(95593),d=s(43127);s(13476),s(92310),s(38380);d.v.ShadersStore.depthPixelShader="#ifdef ALPHATEST\nvarying vec2 vUV;uniform sampler2D diffuseSampler;\n#endif\n#include<clipPlaneFragmentDeclaration>\nvarying float vDepthMetric;\n#ifdef PACKED\n#include<packingFunctions>\n#endif\n#ifdef STORE_CAMERASPACE_Z\nvarying vec4 vViewPos;\n#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\n#include<clipPlaneFragment>\n#ifdef ALPHATEST\nif (texture2D(diffuseSampler,vUV).a<0.4)\ndiscard;\n#endif\n#ifdef STORE_CAMERASPACE_Z\n#ifdef PACKED\ngl_FragColor=pack(vViewPos.z);\n#else\ngl_FragColor=vec4(vViewPos.z,0.0,0.0,1.0);\n#endif\n#else\n#ifdef NONLINEARDEPTH\n#ifdef PACKED\ngl_FragColor=pack(gl_FragCoord.z);\n#else\ngl_FragColor=vec4(gl_FragCoord.z,0.0,0.0,0.0);\n#endif\n#else\n#ifdef PACKED\ngl_FragColor=pack(vDepthMetric);\n#else\ngl_FragColor=vec4(vDepthMetric,0.0,0.0,1.0);\n#endif\n#endif\n#endif\n}",s(97992);var l=s(49938),c=s(28981);class u{setMaterialForRendering(e,t){this._depthMap.setMaterialForRendering(e,t)}constructor(e,t=1,s=null,r=!1,d=n.x.TRILINEAR_SAMPLINGMODE,l=!1,_){this.enabled=!0,this.forceDepthWriteTransparentMeshes=!1,this.useOnlyInActiveCamera=!1,this.reverseCulling=!1,this._scene=e,this._storeNonLinearDepth=r,this._storeCameraSpaceZ=l,this.isPacked=0===t,this.isPacked?this.clearColor=new i.HE(1,1,1,1):this.clearColor=new i.HE(l?1e8:1,0,0,1),u._SceneComponentInitialization(this._scene);const p=e.getEngine();this._camera=s,d!==n.x.NEAREST_SAMPLINGMODE&&(1!==t||p._caps.textureFloatLinearFiltering||(d=n.x.NEAREST_SAMPLINGMODE),2!==t||p._caps.textureHalfFloatLinearFiltering||(d=n.x.NEAREST_SAMPLINGMODE));const f=this.isPacked||!p._features.supportExtendedTextureFormats?5:6;this._depthMap=new a._(null!=_?_:"DepthRenderer",{width:p.getRenderWidth(),height:p.getRenderHeight()},this._scene,!1,!0,t,!1,d,void 0,void 0,void 0,f),this._depthMap.wrapU=n.x.CLAMP_ADDRESSMODE,this._depthMap.wrapV=n.x.CLAMP_ADDRESSMODE,this._depthMap.refreshRate=1,this._depthMap.renderParticles=!1,this._depthMap.renderList=null,this._depthMap.noPrePassRenderer=!0,this._depthMap.activeCamera=this._camera,this._depthMap.ignoreCameraViewport=!0,this._depthMap.useCameraPostProcesses=!1,this._depthMap.onClearObservable.add((e=>{e.clear(this.clearColor,!0,!0,!0)})),this._depthMap.onBeforeBindObservable.add((()=>{var e;null===(e=p._debugPushGroup)||void 0===e||e.call(p,"depth renderer",1)})),this._depthMap.onAfterUnbindObservable.add((()=>{var e;null===(e=p._debugPopGroup)||void 0===e||e.call(p,1)})),this._depthMap.customIsReadyFunction=(e,t,s)=>{if((s||0===t)&&e.subMeshes)for(let t=0;t<e.subMeshes.length;++t){const s=e.subMeshes[t],i=s.getRenderingMesh(),r=i._getInstancesRenderList(s._id,!!s.getReplacementMesh()),n=p.getCaps().instancedArrays&&(null!==r.visibleInstances[s._id]&&void 0!==r.visibleInstances[s._id]||i.hasThinInstances);if(!this.isReady(s,n))return!1}return!0};const S=e=>{var t,s;const i=e.getRenderingMesh(),r=e.getEffectiveMesh(),n=this._scene,a=n.getEngine(),d=e.getMaterial();if(r._internalAbstractMeshDataInfo._isActiveIntermediate=!1,!d||r.infiniteDistance||d.disableDepthWrite||0===e.verticesCount||e._renderId===n.getRenderId())return;const l=r._getWorldMatrixDeterminant()<0;let u=null!==(t=i.overrideMaterialSideOrientation)&&void 0!==t?t:d.sideOrientation;l&&(u=0===u?1:0);const _=0===u;a.setState(d.backFaceCulling,0,!1,_,this.reverseCulling?!d.cullBackFaces:d.cullBackFaces);const p=i._getInstancesRenderList(e._id,!!e.getReplacementMesh());if(p.mustReturn)return;const f=a.getCaps().instancedArrays&&(null!==p.visibleInstances[e._id]&&void 0!==p.visibleInstances[e._id]||i.hasThinInstances),S=this._camera||n.activeCamera;if(this.isReady(e,f)&&S){e._renderId=n.getRenderId();const t=null===(s=r._internalAbstractMeshDataInfo._materialForRenderPass)||void 0===s?void 0:s[a.currentRenderPassId];let l=e._getDrawWrapper();!l&&t&&(l=t._getDrawWrapper());const u=S.mode===h.V.ORTHOGRAPHIC_CAMERA;if(!l)return;const _=l.effect;let M,g;if(a.enableEffect(l),f||i._bind(e,_,d.fillMode),t?t.bindForSubMesh(r.getWorldMatrix(),r,e):(_.setMatrix("viewProjection",n.getTransformMatrix()),_.setMatrix("world",r.getWorldMatrix()),this._storeCameraSpaceZ&&_.setMatrix("view",n.getViewMatrix())),u?(M=!a.useReverseDepthBuffer&&a.isNDCHalfZRange?0:1,g=a.useReverseDepthBuffer&&a.isNDCHalfZRange?0:1):(M=a.useReverseDepthBuffer&&a.isNDCHalfZRange?S.minZ:a.isNDCHalfZRange?0:S.minZ,g=a.useReverseDepthBuffer&&a.isNDCHalfZRange?0:S.maxZ),_.setFloat2("depthValues",M,M+g),!t){if(d.needAlphaTesting()){const e=d.getAlphaTestTexture();e&&(_.setTexture("diffuseSampler",e),_.setMatrix("diffuseMatrix",e.getTextureMatrix()))}if(i.useBones&&i.computeBonesUsingShaders&&i.skeleton){const e=i.skeleton;if(e.isUsingTextureForMatrices){const t=e.getTransformMatrixTexture(i);if(!t)return;_.setTexture("boneSampler",t),_.setFloat("boneTextureWidth",4*(e.bones.length+1))}else _.setMatrices("mBones",e.getTransformMatrices(i))}(0,c.an)(_,d,n),o.G.BindMorphTargetParameters(i,_),i.morphTargetManager&&i.morphTargetManager.isUsingTextureForTargets&&i.morphTargetManager._bind(_)}i._processRendering(r,e,_,d.fillMode,p,f,((e,t)=>_.setMatrix("world",t)))}};this._depthMap.customRenderFunction=(e,t,s,i)=>{let r;if(i.length)for(r=0;r<i.length;r++)S(i.data[r]);for(r=0;r<e.length;r++)S(e.data[r]);for(r=0;r<t.length;r++)S(t.data[r]);if(this.forceDepthWriteTransparentMeshes)for(r=0;r<s.length;r++)S(s.data[r]);else for(r=0;r<s.length;r++)s.data[r].getEffectiveMesh()._internalAbstractMeshDataInfo._isActiveIntermediate=!1}}isReady(e,t){var s;const i=this._scene.getEngine(),n=e.getMesh(),a=n.getScene(),h=null===(s=n._internalAbstractMeshDataInfo._materialForRenderPass)||void 0===s?void 0:s[i.currentRenderPassId];if(h)return h.isReadyForSubMesh(n,e,t);const d=e.getMaterial();if(!d||d.disableDepthWrite)return!1;const l=[],u=[r.o.PositionKind];if(d&&d.needAlphaTesting()&&d.getAlphaTestTexture()&&(l.push("#define ALPHATEST"),n.isVerticesDataPresent(r.o.UVKind)&&(u.push(r.o.UVKind),l.push("#define UV1")),n.isVerticesDataPresent(r.o.UV2Kind)&&(u.push(r.o.UV2Kind),l.push("#define UV2"))),n.useBones&&n.computeBonesUsingShaders){u.push(r.o.MatricesIndicesKind),u.push(r.o.MatricesWeightsKind),n.numBoneInfluencers>4&&(u.push(r.o.MatricesIndicesExtraKind),u.push(r.o.MatricesWeightsExtraKind)),l.push("#define NUM_BONE_INFLUENCERS "+n.numBoneInfluencers),l.push("#define BonesPerMesh "+(n.skeleton?n.skeleton.bones.length+1:0));const t=e.getRenderingMesh().skeleton;(null==t?void 0:t.isUsingTextureForMatrices)&&l.push("#define BONETEXTURE")}else l.push("#define NUM_BONE_INFLUENCERS 0");const _=n.morphTargetManager;let p=0;_&&_.numInfluencers>0&&(p=_.numInfluencers,l.push("#define MORPHTARGETS"),l.push("#define NUM_MORPH_INFLUENCERS "+p),_.isUsingTextureForTargets&&l.push("#define MORPHTARGETS_TEXTURE"),o.G.PrepareAttributesForMorphTargetsInfluencers(u,n,p)),t&&(l.push("#define INSTANCES"),o.G.PushAttributesForInstances(u),e.getRenderingMesh().hasThinInstances&&l.push("#define THIN_INSTANCES")),this._storeNonLinearDepth&&l.push("#define NONLINEARDEPTH"),this._storeCameraSpaceZ&&l.push("#define STORE_CAMERASPACE_Z"),this.isPacked&&l.push("#define PACKED"),(0,c.lK)(d,a,l);const f=e._getDrawWrapper(void 0,!0),S=f.defines,M=l.join("\n");if(S!==M){const e=["world","mBones","boneTextureWidth","viewProjection","view","diffuseMatrix","depthValues","morphTargetInfluences","morphTargetTextureInfo","morphTargetTextureIndices"];(0,c.qx)(e),f.setEffect(i.createEffect("depth",u,e,["diffuseSampler","morphTargets","boneSampler"],M,void 0,void 0,void 0,{maxSimultaneousMorphTargets:p}),M)}return f.effect.isReady()}getDepthMap(){return this._depthMap}dispose(){const e=[];for(const t in this._scene._depthRenderer)this._scene._depthRenderer[t]===this&&e.push(t);if(e.length>0){this._depthMap.dispose();for(const t of e)delete this._scene._depthRenderer[t]}}}u._SceneComponentInitialization=e=>{throw(0,l.S)("DepthRendererSceneComponent")}},97992:(e,t,s)=>{var i=s(43127);s(1041),s(53652),s(31279),s(36409),s(82475),s(33816),s(46842),s(44608),s(47154),s(86886),s(64120),s(31252);i.v.ShadersStore.depthVertexShader="attribute vec3 position;\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<morphTargetsVertexGlobalDeclaration>\n#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]\n#include<clipPlaneVertexDeclaration>\n#include<instancesDeclaration>\nuniform mat4 viewProjection;uniform vec2 depthValues;\n#if defined(ALPHATEST) || defined(NEED_UV)\nvarying vec2 vUV;uniform mat4 diffuseMatrix;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#endif\n#ifdef STORE_CAMERASPACE_Z\nuniform mat4 view;varying vec4 vViewPos;\n#endif\nvarying float vDepthMetric;\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void)\n{vec3 positionUpdated=position;\n#ifdef UV1\nvec2 uvUpdated=uv;\n#endif\n#include<morphTargetsVertexGlobal>\n#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(positionUpdated,1.0);\n#include<clipPlaneVertex>\ngl_Position=viewProjection*worldPos;\n#ifdef STORE_CAMERASPACE_Z\nvViewPos=view*worldPos;\n#else\n#ifdef USE_REVERSE_DEPTHBUFFER\nvDepthMetric=((-gl_Position.z+depthValues.x)/(depthValues.y));\n#else\nvDepthMetric=((gl_Position.z+depthValues.x)/(depthValues.y));\n#endif\n#endif\n#if defined(ALPHATEST) || defined(BASIC_RENDER)\n#ifdef UV1\nvUV=vec2(diffuseMatrix*vec4(uvUpdated,1.0,0.0));\n#endif\n#ifdef UV2\nvUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));\n#endif\n#endif\n}\n"},62106:(e,t,s)=>{s(43127).v.ShadersStore.depthBoxBlurPixelShader="varying vec2 vUV;uniform sampler2D textureSampler;uniform vec2 screenSize;\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{vec4 colorDepth=vec4(0.0);for (int x=-OFFSET; x<=OFFSET; x++)\nfor (int y=-OFFSET; y<=OFFSET; y++)\ncolorDepth+=texture2D(textureSampler,vUV+vec2(x,y)/screenSize);gl_FragColor=(colorDepth/float((OFFSET*2+1)*(OFFSET*2+1)));}"},11358:(e,t,s)=>{var i=s(43127);s(92310);i.v.IncludesShadersStore.bayerDitherFunctions="float bayerDither2(vec2 _P) {return mod(2.0*_P.y+_P.x+1.0,4.0);}\nfloat bayerDither4(vec2 _P) {vec2 P1=mod(_P,2.0); \nvec2 P2=floor(0.5*mod(_P,4.0)); \nreturn 4.0*bayerDither2(P1)+bayerDither2(P2);}\nfloat bayerDither8(vec2 _P) {vec2 P1=mod(_P,2.0); \nvec2 P2=floor(0.5 *mod(_P,4.0)); \nvec2 P4=floor(0.25*mod(_P,8.0)); \nreturn 4.0*(4.0*bayerDither2(P1)+bayerDither2(P2))+bayerDither2(P4);}\n";i.v.IncludesShadersStore.shadowMapFragmentExtraDeclaration="#if SM_FLOAT==0\n#include<packingFunctions>\n#endif\n#if SM_SOFTTRANSPARENTSHADOW==1\n#include<bayerDitherFunctions>\nuniform float softTransparentShadowSM;\n#endif\nvarying float vDepthMetricSM;\n#if SM_USEDISTANCE==1\nuniform vec3 lightDataSM;varying vec3 vPositionWSM;\n#endif\nuniform vec3 biasAndScaleSM;uniform vec2 depthValuesSM;\n#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1\nvarying float zSM;\n#endif\n",s(13476),s(38380);i.v.IncludesShadersStore.shadowMapFragment="float depthSM=vDepthMetricSM;\n#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1\n#if SM_USEDISTANCE==1\ndepthSM=(length(vPositionWSM-lightDataSM)+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\n#else\n#ifdef USE_REVERSE_DEPTHBUFFER\ndepthSM=(-zSM+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\n#else\ndepthSM=(zSM+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\n#endif\n#endif\n#ifdef USE_REVERSE_DEPTHBUFFER\ngl_FragDepth=clamp(1.0-depthSM,0.0,1.0);\n#else\ngl_FragDepth=clamp(depthSM,0.0,1.0); \n#endif\n#elif SM_USEDISTANCE==1\ndepthSM=(length(vPositionWSM-lightDataSM)+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\n#endif\n#if SM_ESM==1\ndepthSM=clamp(exp(-min(87.,biasAndScaleSM.z*depthSM)),0.,1.);\n#endif\n#if SM_FLOAT==1\ngl_FragColor=vec4(depthSM,1.0,1.0,1.0);\n#else\ngl_FragColor=pack(depthSM);\n#endif\nreturn;";i.v.ShadersStore.shadowMapPixelShader="#include<shadowMapFragmentExtraDeclaration>\n#ifdef ALPHATEXTURE\nvarying vec2 vUV;uniform sampler2D diffuseSampler;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\n#include<clipPlaneFragment>\n#ifdef ALPHATEXTURE\nfloat alphaFromAlphaTexture=texture2D(diffuseSampler,vUV).a;\n#ifdef ALPHATESTVALUE\nif (alphaFromAlphaTexture<ALPHATESTVALUE)\ndiscard;\n#endif\n#endif\n#if SM_SOFTTRANSPARENTSHADOW==1\n#ifdef ALPHATEXTURE\nif ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM*alphaFromAlphaTexture) discard;\n#else\nif ((bayerDither8(floor(mod(gl_FragCoord.xy,8.0))))/64.0>=softTransparentShadowSM) discard;\n#endif\n#endif\n#include<shadowMapFragment>\n}"},47827:(e,t,s)=>{var i=s(43127);s(1041),s(53652),s(31279),s(36409),s(62339);i.v.IncludesShadersStore.sceneVertexDeclaration="uniform mat4 viewProjection;\n#ifdef MULTIVIEW\nuniform mat4 viewProjectionR;\n#endif\nuniform mat4 view;uniform mat4 projection;uniform vec4 vEyePosition;\n";i.v.IncludesShadersStore.meshVertexDeclaration="uniform mat4 world;uniform float visibility;\n";i.v.IncludesShadersStore.shadowMapVertexDeclaration="#include<sceneVertexDeclaration>\n#include<meshVertexDeclaration>\n",s(71233),s(77234);i.v.IncludesShadersStore.shadowMapUboDeclaration="layout(std140,column_major) uniform;\n#include<sceneUboDeclaration>\n#include<meshUboDeclaration>\n";i.v.IncludesShadersStore.shadowMapVertexExtraDeclaration="#if SM_NORMALBIAS==1\nuniform vec3 lightDataSM;\n#endif\nuniform vec3 biasAndScaleSM;uniform vec2 depthValuesSM;varying float vDepthMetricSM;\n#if SM_USEDISTANCE==1\nvarying vec3 vPositionWSM;\n#endif\n#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1\nvarying float zSM;\n#endif\n",s(82475),s(46842),s(44608),s(47154),s(86886),s(64120);i.v.IncludesShadersStore.shadowMapVertexNormalBias="#if SM_NORMALBIAS==1\n#if SM_DIRECTIONINLIGHTDATA==1\nvec3 worldLightDirSM=normalize(-lightDataSM.xyz);\n#else\nvec3 directionToLightSM=lightDataSM.xyz-worldPos.xyz;vec3 worldLightDirSM=normalize(directionToLightSM);\n#endif\nfloat ndlSM=dot(vNormalW,worldLightDirSM);float sinNLSM=sqrt(1.0-ndlSM*ndlSM);float normalBiasSM=biasAndScaleSM.y*sinNLSM;worldPos.xyz-=vNormalW*normalBiasSM;\n#endif\n";i.v.IncludesShadersStore.shadowMapVertexMetric="#if SM_USEDISTANCE==1\nvPositionWSM=worldPos.xyz;\n#endif\n#if SM_DEPTHTEXTURE==1\n#ifdef IS_NDC_HALF_ZRANGE\n#define BIASFACTOR 0.5\n#else\n#define BIASFACTOR 1.0\n#endif\n#ifdef USE_REVERSE_DEPTHBUFFER\ngl_Position.z-=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;\n#else\ngl_Position.z+=biasAndScaleSM.x*gl_Position.w*BIASFACTOR;\n#endif\n#endif\n#if defined(SM_DEPTHCLAMP) && SM_DEPTHCLAMP==1\nzSM=gl_Position.z;gl_Position.z=0.0;\n#elif SM_USEDISTANCE==0\n#ifdef USE_REVERSE_DEPTHBUFFER\nvDepthMetricSM=(-gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\n#else\nvDepthMetricSM=(gl_Position.z+depthValuesSM.x)/depthValuesSM.y+biasAndScaleSM.x;\n#endif\n#endif\n",s(31252);i.v.ShadersStore.shadowMapVertexShader="attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<morphTargetsVertexGlobalDeclaration>\n#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]\n#ifdef INSTANCES\nattribute vec4 world0;attribute vec4 world1;attribute vec4 world2;attribute vec4 world3;\n#endif\n#include<helperFunctions>\n#include<__decl__shadowMapVertex>\n#ifdef ALPHATEXTURE\nvarying vec2 vUV;uniform mat4 diffuseMatrix;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#endif\n#include<shadowMapVertexExtraDeclaration>\n#include<clipPlaneVertexDeclaration>\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void)\n{vec3 positionUpdated=position;\n#ifdef UV1\nvec2 uvUpdated=uv;\n#endif\n#ifdef NORMAL\nvec3 normalUpdated=normal;\n#endif\n#include<morphTargetsVertexGlobal>\n#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(positionUpdated,1.0);\n#ifdef NORMAL\nmat3 normWorldSM=mat3(finalWorld);\n#if defined(INSTANCES) && defined(THIN_INSTANCES)\nvec3 vNormalW=normalUpdated/vec3(dot(normWorldSM[0],normWorldSM[0]),dot(normWorldSM[1],normWorldSM[1]),dot(normWorldSM[2],normWorldSM[2]));vNormalW=normalize(normWorldSM*vNormalW);\n#else\n#ifdef NONUNIFORMSCALING\nnormWorldSM=transposeMat3(inverseMat3(normWorldSM));\n#endif\nvec3 vNormalW=normalize(normWorldSM*normalUpdated);\n#endif\n#endif\n#include<shadowMapVertexNormalBias>\ngl_Position=viewProjection*worldPos;\n#include<shadowMapVertexMetric>\n#ifdef ALPHATEXTURE\n#ifdef UV1\nvUV=vec2(diffuseMatrix*vec4(uvUpdated,1.0,0.0));\n#endif\n#ifdef UV2\nvUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));\n#endif\n#endif\n#include<clipPlaneVertex>\n}"}}]);
//# sourceMappingURL=803.babylonBundle.js.map